[{"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js":"1","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js":"2","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js":"3","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js":"4","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js":"5","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\store.js":"6","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Home.jsx":"7","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Login.jsx":"8","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js":"9","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js":"10","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\reducerUser.js":"11","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\actionUser.js":"12","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js":"13","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js":"14","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\type.js":"15","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\MbHome.jsx":"16","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Transactions.js":"17","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\reducerCustomer.js":"18","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\type.js":"19","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Customers.js":"20","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\actionCustomer.js":"21","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\reducerTransaction.js":"22","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\type.js":"23","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\actionTransaction.js":"24","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Auth.jsx":"25"},{"size":273,"mtime":1618862170551,"results":"26","hashOfConfig":"27"},{"size":1606,"mtime":1619122787726,"results":"28","hashOfConfig":"27"},{"size":881,"mtime":1618844577093,"results":"29","hashOfConfig":"27"},{"size":3530,"mtime":1619120506447,"results":"30","hashOfConfig":"27"},{"size":210,"mtime":1618844577144,"results":"31","hashOfConfig":"27"},{"size":436,"mtime":1618952431002,"results":"32","hashOfConfig":"27"},{"size":1345,"mtime":1618943412153,"results":"33","hashOfConfig":"27"},{"size":6101,"mtime":1619012245794,"results":"34","hashOfConfig":"27"},{"size":4483,"mtime":1619109840737,"results":"35","hashOfConfig":"27"},{"size":218,"mtime":1618844577099,"results":"36","hashOfConfig":"27"},{"size":779,"mtime":1618943364514,"results":"37","hashOfConfig":"27"},{"size":445,"mtime":1618850044092,"results":"38","hashOfConfig":"27"},{"size":584,"mtime":1618844577098,"results":"39","hashOfConfig":"27"},{"size":2419,"mtime":1618945601391,"results":"40","hashOfConfig":"27"},{"size":119,"mtime":1618850004797,"results":"41","hashOfConfig":"27"},{"size":4194,"mtime":1619013684281,"results":"42","hashOfConfig":"27"},{"size":3610,"mtime":1618953193021,"results":"43","hashOfConfig":"27"},{"size":473,"mtime":1618952177744,"results":"44","hashOfConfig":"27"},{"size":143,"mtime":1618951889142,"results":"45","hashOfConfig":"27"},{"size":2804,"mtime":1618945951964,"results":"46","hashOfConfig":"27"},{"size":278,"mtime":1618951899115,"results":"47","hashOfConfig":"27"},{"size":486,"mtime":1619012660758,"results":"48","hashOfConfig":"27"},{"size":161,"mtime":1618951907654,"results":"49","hashOfConfig":"27"},{"size":222,"mtime":1618952359845,"results":"50","hashOfConfig":"27"},{"size":4682,"mtime":1619133024526,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1t1cr17",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js",[],["113","114"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js",["115","116","117"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js",["118","119","120","121"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\store.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Home.jsx",["122","123","124"],"import React from 'react';\r\nimport QuickViewCustomer from './QuickViewCustomer';\r\nimport '../styles/Home.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userInfo } from '../Redux/User/actionUser';\r\nimport axios from 'axios';\r\n\r\nfunction Home() {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    const dispatch = useDispatch();\r\n    let customers = [];\r\n\r\n    const loadCustomers = () => {\r\n        axios.get(process.env.REACT_APP_API_URL + '/customers', { id: user.id })\r\n            .then((response) => console.log(response));\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    // const ShowCustomer = (customer) => {\r\n    //     history.push('/customers/' + customer.name);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <button onClick={loadCustomers}>Charger CLIENTS</button>\r\n            {customers !== undefined &&\r\n                <div>\r\n                    {customers.map((customer, i) => {\r\n                        // return (<QuickViewCustomer customer={customer} key={i} onClick={() => ShowCustomer(customer)} />)\r\n                        return (<QuickViewCustomer customer={customer} key={i} />)\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Login.jsx",["125","126"],"import React, { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userInfo } from '../Redux/User/actionUser';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport '../styles/Login.css';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\r\n\r\nconst Login = () => {\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [userInput, setUserInput] = useState({\r\n        usernameLogin: 'admin',\r\n        passwordLogin: 'admin'\r\n    });\r\n\r\n    const [userRegistration, setUserRegistration] = useState({\r\n        usernameRegistration: '',\r\n        emailRegistration: '',\r\n        passwordRegistration: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const handleChangeInput = e => {\r\n        setUserInput({ ...userInput, [e.target.id]: e.target.value })\r\n    }\r\n\r\n    const handleChangeRegistration = e => {\r\n        setUserRegistration({ ...userRegistration, [e.target.id]: e.target.value });\r\n    }\r\n\r\n    const loginCheck = useRef(null);\r\n    const loginForm = useRef(null);\r\n    const signupForm = useRef(null);\r\n    const titleRef = useRef(null);\r\n\r\n    const showLogin = () => {\r\n        loginCheck.current.checked = true;\r\n        loginForm.current.className = 'login';\r\n        titleRef.current.className = 'title login';\r\n    }\r\n\r\n    const showSignup = () => {\r\n        signupForm.current.checked = true;\r\n        loginForm.current.className = 'login loginHide';\r\n        titleRef.current.className = 'title login loginHide';\r\n    }\r\n\r\n    const { usernameLogin, passwordLogin } = userInput;\r\n    const { usernameRegistration, emailRegistration, passwordRegistration, confirmPassword } = userRegistration;\r\n\r\n    const disableLogin = usernameLogin === '' || passwordLogin === '' ? true : false;\r\n    const disableSignup = emailRegistration === '' || passwordRegistration === '' || confirmPassword !== passwordRegistration ? true : false;\r\n    const passwordNotEqual = passwordRegistration !== confirmPassword ? true : false;\r\n\r\n    const login = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/login', { usernameLogin: userInput.usernameLogin, passwordLogin: userInput.passwordLogin })\r\n            .then(response => {\r\n                if (response.data.message) {\r\n                    alert(response.data.message);\r\n                } else {\r\n                    dispatch(userInfo(response.data));\r\n                    console.log(response.data.id);\r\n                    getData(response.data.id);\r\n                    history.push('/');\r\n                }\r\n            })\r\n    }\r\n\r\n    const getData = (id_user) => {\r\n        axios.get(process.env.REACT_APP_API_URL + '/customers/' + id_user)\r\n            .then(res => res.data.forEach(cust => dispatch(customerAdd(cust))))\r\n            .catch(err => alert(err));\r\n\r\n        axios.get(process.env.REACT_APP_API_URL + '/transactions/' + id_user)\r\n            .then(res => res.data.forEach(trans => dispatch(transactionAdd(trans))))\r\n            .catch(err => alert(err));\r\n        // axios.get(process.env.REACT_APP_API_URL + '/transactions/' + id_user)\r\n        //     .then(res => console.log(res.data))\r\n        //     .catch(err => alert(err));\r\n    }\r\n\r\n    const register = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/register', userRegistration)\r\n            .then(response => dispatch(userInfo(response.data)))\r\n            .catch((error) => alert('Une erreur est survenue. ' + error));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n\r\n                <form action=\"#\" id=\"loginForm\" ref={loginForm}>\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='usernameLogin' onChange={handleChangeInput} value={usernameLogin} placeholder=\"Pseudo\" required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='passwordLogin' onChange={handleChangeInput} value={passwordLogin} placeholder=\"Mot de passe\" required />\r\n                    </div>\r\n                    <div className=\"pass-link\"><p>Mot de passe oublié ?</p></div>\r\n                    <div className=\"field\">\r\n                        <input type=\"submit\" onClick={login} value=\"Connexion\" disabled={disableLogin} />\r\n                    </div>\r\n                    <div className=\"signup-link\">Pas encore membre ? <p onClick={showSignup}>S'enregistrer</p></div>\r\n                </form>\r\n\r\n                <form action=\"#\" className=\"signupForm\">\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='usernameRegistration' placeholder=\"Pseudo\" onChange={handleChangeRegistration} value={usernameRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='emailRegistration' placeholder=\"Adresse e-mail\" onChange={handleChangeRegistration} value={emailRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='passwordRegistration' placeholder=\"Mot de passe\" onChange={handleChangeRegistration} value={passwordRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='confirmPassword' placeholder=\"Confirmer mot de passe\" onChange={handleChangeRegistration} value={confirmPassword} required />\r\n                        {passwordNotEqual &&\r\n                            <p>Mot de passe différent</p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"submit\" onClick={register} value=\"S'inscrire\" disabled={disableSignup} />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js",["127"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\r\n\r\nconst CreateTransaction = ({ nameCustomer }) => {   \r\n\r\n    const customers = useSelector(state => state.customers.customers);\r\n    const user = useSelector(state => state.user.info);\r\n    const dispatch = useDispatch();\r\n    const [currentCustomer, setCurrentCustomer] = useState({name: ''});\r\n\r\n    const [transactionToAdd, setTransactionToAdd] = useState({\r\n        date: '',\r\n        customer: '',\r\n        designation: '',\r\n        amount: 0,\r\n        id_user: user.id\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (nameCustomer) {\r\n            const indexOfCustomer = customers.findIndex(cust => cust.name === nameCustomer);\r\n            setCurrentCustomer(customers[indexOfCustomer]);\r\n        }\r\n    }, [])\r\n\r\n    \r\n\r\n    const changeHandler = e => {\r\n        if (e.target.name === 'date') {\r\n            setTransactionToAdd({ ...transactionToAdd, date: e.target.value.toLocaleString() });\r\n        } else {\r\n            setTransactionToAdd({ ...transactionToAdd, [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        let transactionSend = {};\r\n        if (!nameCustomer) {\r\n            transactionSend = transactionToAdd;\r\n        } else {\r\n            transactionSend = { ...transactionToAdd, customer: currentCustomer.id }\r\n        }\r\n        axios.post(process.env.REACT_APP_API_URL + '/transactions', transactionSend)\r\n            .then(() => {\r\n                dispatch(transactionAdd(transactionSend));\r\n                setTransactionToAdd({\r\n                    date: '',\r\n                    customer: '',\r\n                    designation: '',\r\n                    amout: 0,\r\n                    id_user: user.id\r\n                });\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const { date, customer, designation, amount } = transactionToAdd;\r\n    return (\r\n        <div className=\"row\">\r\n            <form onSubmit={submitHandler} className=\"my-5\">\r\n                <div className=\"input-group align-items-end col-sm-12\">\r\n                    <div className=\"col-6 pe-1\">\r\n                        <label htmlFor=\"date\" className=\"form-label mx-3\">Date : </label>\r\n                        <input type=\"date\" name='date' className=\"form-control\" value={date} onChange={changeHandler} min=\"2019-01-01\" max=\"2021-12-31\" />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 ps-1\">\r\n                        <label htmlFor=\"customer\" className=\"form-label mx-3\">Client : </label>\r\n                        { nameCustomer !== undefined &&\r\n                            <input type=\"text\" className=\"form-control\" name=\"customer\" value={currentCustomer.name} disabled/>\r\n                        }\r\n\r\n                        { nameCustomer === undefined &&\r\n                            <select className=\"form-select\" name=\"customer\" value={customer} onChange={changeHandler}>\r\n                                <option value=''></option>\r\n                                {customers.map((customer, k) => {\r\n                                    return (\r\n                                        <option key={k} value={customer.id}>{customer.name}</option>\r\n                                    )\r\n                                })}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-6 mt-3 pe-1\">\r\n                        <label htmlFor=\"designation\" className=\"form-label mx-3\">Designation : </label>\r\n                        <input type=\"text\" name='designation' className=\"form-control\" value={designation} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 ps-1\">\r\n                        <label htmlFor=\"amount\" className=\"form-label mx-3\">Montant : </label>\r\n                        <input type=\"number\" name='amount' className=\"form-control\" value={amount} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"mx-auto mt-3\">\r\n                        <button type='submit' className=\"btn btn-success px-5\">Ajouter</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTransaction;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\reducerUser.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\actionUser.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js",["128"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst CreateCustomer = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [customer, setCustomer] = useState({\r\n        nameCustomer: '',\r\n        email: '',\r\n        id_user: user.id\r\n    })\r\n\r\n    const changeHandler = e => {\r\n        console.log(e);\r\n        console.log(customer);\r\n        setCustomer({...customer, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/customers', customer)\r\n            .then(() => {\r\n                dispatch(customerAdd(user.id));\r\n                setCustomer({ nameCustomer: '', email: '', id_user: user.id});\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const testRqt = () => {\r\n        console.log(customer);\r\n    }\r\n\r\n    const { nameCustomer, email } = customer;\r\n    return (\r\n        <div className=\"row\">\r\n            <form onSubmit={submitHandler} className=\"mt-4\">\r\n                <div className=\"input-group align-items-end\">\r\n                    <div className=\"col-6 pe1\">\r\n                        <label htmlFor=\"nameCustomer\" className=\"form-label ms-5 me-2\">Nom : </label>\r\n                        <input type=\"text\" name='nameCustomer' className=\"form-control\" value={nameCustomer} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 pe1\">\r\n                        <label htmlFor=\"email\" className=\"form-label ms-5 me-2\">e-mail : </label>\r\n                        <input type=\"email\" name='email' className=\"form-control\" value={email} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <button type='submit' className=\"btn btn-success mx-auto mt-3\">Ajouter</button>\r\n                    <button type='button' onClick={testRqt} className=\"btn btn-info mx-auto mt-3\">Info</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCustomer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\MbHome.jsx",["129","130"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { MdArrowDownward, MdArrowUpward } from 'react-icons/md';\r\nimport { useHistory } from 'react-router';\r\nimport '../styles/MbHome.css';\r\n\r\nconst MbHome = () => {\r\n\r\n    const customers = useSelector(state => state.customers.customers);\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const transactions = useSelector(state => state.transactions.transactions);\r\n    const [totFactures, setTotFactures] = useState(0);\r\n    const [totPaiements, setTotPaiements] = useState(0);\r\n\r\n    useEffect(() => {\r\n        calcTot();\r\n    }, [transactions])\r\n\r\n    const calcTot = () => {\r\n        setTotPaiements(0);\r\n        setTotFactures(0);\r\n        transactions.forEach(transaction => {\r\n            transaction.amount > 0 ? setTotFactures(prevState => prevState + transaction.amount) : setTotPaiements(prevState => prevState - transaction.amount);\r\n        });\r\n    }\r\n\r\n    const calcBalance = (customer) => {\r\n        return (customer.facture + customer.paiement)\r\n    }\r\n\r\n    const showCustomer = (customer) => {\r\n        history.push('/customers/' + customer.name);\r\n    }\r\n\r\n    const dateSlice = (str) => {\r\n        const strSplit = str.split('-');\r\n        const strFinal = strSplit[2] + '/' + strSplit[1];\r\n        return strFinal;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header className='header-MbHome'>\r\n                <div>\r\n                    <h3>Bienvenue</h3>\r\n                    <h1>Geffrey SAID</h1>\r\n                </div>\r\n                <div className=\"profilImg\">\r\n                </div>\r\n            </header>\r\n            <div className=\"cardCustomers\">\r\n                {customers !== null &&\r\n                    <div className='card-list'>\r\n                        {\r\n                            customers.map(((customer, k) => {\r\n                                return (\r\n                                    <div key={k} className=\"customer-card\" onClick={() => showCustomer(customer)}>\r\n                                        <h4>{customer.name} <span>VISA</span></h4>\r\n                                        <p>{calcBalance(customer)},00 €</p>\r\n                                    </div>\r\n                                )\r\n                            }))\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"transaction-mobile\">\r\n                <div className=\"recap\">\r\n                    <div className=\"recap-card\">\r\n                        <p className='recap-arrow arrow-up'> <MdArrowUpward size={25} /> </p>\r\n                        <p> Factures <br /> <span>{totFactures},00 €</span> </p>\r\n                    </div>\r\n                    <div className=\"recap-card\">\r\n                        <p className='recap-arrow arrow-down'> <MdArrowDownward size={25} /> </p>\r\n                        <p> Paiements <br /> <span>{totPaiements},00 €</span> </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {transactions !== null &&\r\n                    <div className=\"transaction-list\">\r\n                        {transactions.map((transaction, k) => {\r\n                            return (\r\n                                <div key={k} className=\"transaction-line\">\r\n                                    {transaction.amount > 0 ? <p className=\"arrow-line arrow-up\"> <MdArrowUpward size={25} /> </p> : <p className=\"arrow-line arrow-down\"> <MdArrowDownward size={25} /> </p>}\r\n                                    <p className='trans-detail'> <span className=\"trans-name\">{transaction.name}</span> <span className=\"trans-date\">{dateSlice(transaction.date)}</span></p>\r\n                                    <p className=\"trans-amount\">{transaction.amount},00 €</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MbHome;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Transactions.js",["131"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { MdDeleteForever, MdModeEdit } from 'react-icons/md';\r\nimport CreateTransaction from '../components/CreateTransaction';\r\nimport Title from '../components/Title';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Transactions = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const transactions = useSelector(state => state.transactions.transactions)\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    // useEffect(() => {\r\n    //     fetch(process.env.REACT_APP_API_URL + '/transactions')\r\n    //         .then(res => res.json())\r\n    //         .then(res => setTransactions(res))\r\n    // }, [update])\r\n\r\n    // const deleteTransaction = (transaction) => {\r\n    //     const requestOption = {\r\n    //         method: 'DELETE',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         body: JSON.stringify({ id: transaction.id })\r\n    //     };\r\n    //     fetch(process.env.REACT_APP_API_URL + '/transactions', requestOption)\r\n    //     .then(() => {\r\n    //         setUpdate(update + 1);\r\n    //         updateCustomers();\r\n    //     })\r\n    // }\r\n\r\n    // const updateState = () => {\r\n    //     setUpdate(update + 1);\r\n    //     updateCustomers();\r\n    // }\r\n\r\n    const deleteTransaction = (transaction) => {\r\n        console.log(transaction);\r\n    }\r\n\r\n    const dateSlice = (str) => {\r\n        const strSplit = str.split('-');\r\n        const strFinal = strSplit[2] + '/' + strSplit[1];\r\n        return strFinal;\r\n    }\r\n\r\n    const switchEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Title title='Transactions' />\r\n            <CreateTransaction />\r\n            <div className=\"text-right\">\r\n                <button className=\"btn btn-secondary\" onClick={switchEdit}> <MdModeEdit /> </button>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-striped align-middle\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Client</th>\r\n                            <th>designation</th>\r\n                            <th>Montant</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {transactions !== undefined &&\r\n                        <tbody>\r\n                            {transactions.map((transaction, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td> {dateSlice(transaction.date)} </td>\r\n                                        <td> {transaction.name} </td>\r\n                                        <td> {transaction.designation} </td>\r\n                                        <td> {transaction.amount} € </td>\r\n                                        {edit &&\r\n                                            <td><button onClick={() => deleteTransaction(transaction)} className=\"btn btn-danger\"><MdDeleteForever /></button></td>\r\n                                        }\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    }\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transactions\r\n","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\reducerCustomer.js",["132","133"],"import { CUSTOMER_UPDATE, CUSTOMER_ERASE, CUSTOMER_ADD } from './type';\r\n\r\nconst initialState = {\r\n    customers: []\r\n}\r\n\r\nconst customerReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CUSTOMER_ADD:\r\n                return {\r\n                    ...state,\r\n                    customers: [...state.customers, action.customer]\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default customerReducer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Customers.js",["134"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport CreateCustomer from '../components/CreateCustomer';\r\nimport Title from '../components/Title';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/Customers.css';\r\nimport axios from 'axios';\r\n\r\nconst Customers = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const customers = useSelector(state => state.customers.customers)\r\n\r\n    const EraseCustomer = (customer) => {\r\n        axios.post(process.env.REACT_APP_API_URL + '/customers', customer)\r\n        .then((response) => console.log(response.data))\r\n        .catch((err) => alert('Une erreur est survenue : ' + err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Title title='Clients' />\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nom</th>\r\n                            <th>Facture</th>\r\n                            <th>Paiement</th>\r\n                            <th>Balance</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {customers !== '' &&\r\n                        <tbody>\r\n                            {customers.map((customer, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.name} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.facture} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.paiement} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.facture + customer.paiement},00 € </Link></td>\r\n                                        <td><button onClick={() => EraseCustomer(customer)} className=\"btn btn-danger\">Effacer</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    }\r\n                </table>\r\n            </div>\r\n            <h3 className=\"container ms-5 mt-5\">Ajouter un client</h3>\r\n            <div>\r\n                <CreateCustomer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customers;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\actionCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\reducerTransaction.js",["135","136"],"import { TRANSACTION_ADD, TRANSACTION_ERASE, TRANSACTION_UPDATE } from './type';\r\n\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\nconst transactionReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case TRANSACTION_ADD:\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.transaction]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default transactionReducer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\actionTransaction.js",["137","138"],"import { TRANSACTION_ADD, TRANSACTION_ERASE, TRANSACTION_UPDATE } from './type';\r\n\r\nexport const transactionAdd = (transaction) => {\r\n    return {\r\n        type: TRANSACTION_ADD,\r\n        transaction: transaction\r\n    }\r\n}","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Auth.jsx",["139","140","141","142","143","144","145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":12},{"ruleId":"151","severity":1,"message":"155","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":18},{"ruleId":"151","severity":1,"message":"156","line":14,"column":8,"nodeType":"153","messageId":"154","endLine":14,"endColumn":13},{"ruleId":"157","severity":1,"message":"158","line":18,"column":8,"nodeType":"159","endLine":18,"endColumn":10,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":29,"column":8,"nodeType":"159","endLine":29,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":32,"column":32,"nodeType":"165","messageId":"166","endLine":32,"endColumn":34},{"ruleId":"157","severity":1,"message":"167","line":37,"column":8,"nodeType":"159","endLine":37,"endColumn":25,"suggestions":"168"},{"ruleId":"151","severity":1,"message":"169","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":18},{"ruleId":"151","severity":1,"message":"170","line":12,"column":11,"nodeType":"153","messageId":"154","endLine":12,"endColumn":19},{"ruleId":"151","severity":1,"message":"171","line":20,"column":9,"nodeType":"153","messageId":"154","endLine":20,"endColumn":16},{"ruleId":"151","severity":1,"message":"172","line":2,"column":23,"nodeType":"153","messageId":"154","endLine":2,"endColumn":34},{"ruleId":"151","severity":1,"message":"173","line":40,"column":11,"nodeType":"153","messageId":"154","endLine":40,"endColumn":20},{"ruleId":"157","severity":1,"message":"174","line":26,"column":8,"nodeType":"159","endLine":26,"endColumn":10,"suggestions":"175"},{"ruleId":"157","severity":1,"message":"158","line":15,"column":8,"nodeType":"159","endLine":15,"endColumn":10,"suggestions":"176"},{"ruleId":"157","severity":1,"message":"158","line":16,"column":8,"nodeType":"159","endLine":16,"endColumn":10,"suggestions":"177"},{"ruleId":"157","severity":1,"message":"178","line":24,"column":8,"nodeType":"159","endLine":24,"endColumn":22,"suggestions":"179"},{"ruleId":"157","severity":1,"message":"158","line":16,"column":8,"nodeType":"159","endLine":16,"endColumn":10,"suggestions":"180"},{"ruleId":"151","severity":1,"message":"181","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"182","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":41},{"ruleId":"157","severity":1,"message":"158","line":18,"column":8,"nodeType":"159","endLine":18,"endColumn":10,"suggestions":"183"},{"ruleId":"151","severity":1,"message":"184","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"185","line":1,"column":46,"nodeType":"153","messageId":"154","endLine":1,"endColumn":64},{"ruleId":"151","severity":1,"message":"184","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":44},{"ruleId":"151","severity":1,"message":"185","line":1,"column":46,"nodeType":"153","messageId":"154","endLine":1,"endColumn":64},{"ruleId":"186","severity":1,"message":"187","line":45,"column":29,"nodeType":"188","endLine":45,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":46,"column":29,"nodeType":"188","endLine":46,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":47,"column":29,"nodeType":"188","endLine":47,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":48,"column":29,"nodeType":"188","endLine":48,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":71,"column":29,"nodeType":"188","endLine":71,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":72,"column":29,"nodeType":"188","endLine":72,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":73,"column":29,"nodeType":"188","endLine":73,"endColumn":65},{"ruleId":"186","severity":1,"message":"187","line":74,"column":29,"nodeType":"188","endLine":74,"endColumn":65},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'BottomMenu' is defined but never used.","'Login' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["191"],"React Hook useEffect has missing dependencies: 'currentCustomer', 'customers', and 'name'. Either include them or remove the dependency array.",["192"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'customerTransactions' and 'transactions'. Either include them or remove the dependency array. You can also do a functional update 'setCustomerTransactions(c => ...)' if you only need 'customerTransactions' in the 'setCustomerTransactions' call.",["193"],"'userInfo' is defined but never used.","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'useSelector' is defined but never used.","'showLogin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customers' and 'nameCustomer'. Either include them or remove the dependency array.",["194"],["195"],["196"],"React Hook useEffect has a missing dependency: 'calcTot'. Either include it or remove the dependency array.",["197"],["198"],"'CUSTOMER_UPDATE' is defined but never used.","'CUSTOMER_ERASE' is defined but never used.",["199"],"'TRANSACTION_ERASE' is defined but never used.","'TRANSACTION_UPDATE' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"200","fix":"208"},{"desc":"200","fix":"209"},{"desc":"210","fix":"211"},{"desc":"200","fix":"212"},{"desc":"200","fix":"213"},"Update the dependencies array to be: [history, user.id]",{"range":"214","text":"215"},"Update the dependencies array to be: [currentCustomer, customers, name]",{"range":"216","text":"217"},"Update the dependencies array to be: [currentCustomer, customerTransactions, transactions]",{"range":"218","text":"219"},"Update the dependencies array to be: [customers, nameCustomer]",{"range":"220","text":"221"},{"range":"222","text":"215"},{"range":"223","text":"215"},"Update the dependencies array to be: [calcTot, transactions]",{"range":"224","text":"225"},{"range":"226","text":"215"},{"range":"227","text":"215"},[674,676],"[history, user.id]",[1119,1121],"[currentCustomer, customers, name]",[1352,1369],"[currentCustomer, customerTransactions, transactions]",[925,927],"[customers, nameCustomer]",[484,486],[540,542],[794,808],"[calcTot, transactions]",[546,548],[570,572]]