[{"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js":"1","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js":"2","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CustomersService.js":"3","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Home.js":"4","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Customers.js":"5","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js":"6","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js":"7","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Transactions.js":"8","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js":"9","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\MbHome.jsx":"10","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js":"11","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js":"12","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js":"13","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js":"14"},{"size":273,"mtime":1617481447691,"results":"15","hashOfConfig":"16"},{"size":143,"mtime":1617481447635,"results":"17","hashOfConfig":"16"},{"size":2546,"mtime":1617481447640,"results":"18","hashOfConfig":"16"},{"size":749,"mtime":1617481447641,"results":"19","hashOfConfig":"16"},{"size":2823,"mtime":1617481447639,"results":"20","hashOfConfig":"16"},{"size":3161,"mtime":1617481447645,"results":"21","hashOfConfig":"16"},{"size":951,"mtime":1617481447636,"results":"22","hashOfConfig":"16"},{"size":3211,"mtime":1617481447645,"results":"23","hashOfConfig":"16"},{"size":210,"mtime":1617481447692,"results":"24","hashOfConfig":"16"},{"size":4100,"mtime":1617481447641,"results":"25","hashOfConfig":"16"},{"size":1961,"mtime":1617481447637,"results":"26","hashOfConfig":"16"},{"size":218,"mtime":1617481447644,"results":"27","hashOfConfig":"16"},{"size":4237,"mtime":1617481447638,"results":"28","hashOfConfig":"16"},{"size":584,"mtime":1617481447642,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1t1cr17",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js",[],["63","64"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CustomersService.js",["65"],"import React, { Component } from 'react'\r\nimport '../App.css';\r\nimport '../styles/Home.css';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport NotFound from '../pages/NotFound';\r\nimport Customers from './Customers';\r\nimport Transactions from './Transactions';\r\nimport DetailCustomer from './detailCustomer';\r\nimport BottomMenu from './BottomMenu';\r\nimport MbHome from './MbHome';\r\n\r\n\r\nexport class CustomersService extends Component {\r\n\r\n    constructor(props) {\r\n        let _isMounted = false;\r\n        super(props)\r\n\r\n        this.state = {\r\n            customers: []\r\n        }\r\n        this.updateCustomers = this.updateCustomers.bind(this);\r\n    }\r\n\r\n    updateCustomers = () => {\r\n        fetch(process.env.REACT_APP_API_URL + '/customers').then((response) => {\r\n            return response.json();\r\n        }).then((response) => {\r\n            this.setState({ customers: response });\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetch(process.env.REACT_APP_API_URL + '/customers').then((response) => {\r\n            return response.json();\r\n        }).then((response) => {\r\n            this.setState({ customers: response })\r\n        })\r\n        this._isMounted=true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted=false;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App container-fluid\">\r\n                <Router>\r\n                    <div className='bottomMenu'>\r\n                        {/* <Sidebar /> */}\r\n                        <BottomMenu />\r\n                    </div>\r\n                    <div className='mainContent'>\r\n                        <Switch>\r\n                            <Route path='/' exact component={() => <Home customers={this.state.customers} />} />\r\n                            <Route path='/customers/:name' component={DetailCustomer} />\r\n                            <Route path='/customers' component={() => <Customers customers={this.state.customers} updateCustomers={this.updateCustomers} />} />\r\n                            <Route path='/transactions' component={() => <Transactions updateCustomers={this.updateCustomers} />} />\r\n                            <Route path='/mb/home' component={() => <MbHome customers={this.state.customers} />} />\r\n                            <Route path='*' component={NotFound} />\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomersService\r\n\r\n","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Home.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Customers.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js",["66"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/detailCustomer.css';\r\nimport CreateTransaction from './CreateTransaction';\r\n\r\nconst DetailCustomer = () => {\r\n\r\n    const { name } = useParams();\r\n    const [update, setUpdate] = useState(0)\r\n    const [currentCustomer, setCustomer] = useState('');\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [colorText, setColorText] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_URL + `/customers/${name}`).then((response) => {\r\n            return response.json();\r\n        }).then((response) => {\r\n            setCustomer(response[0]);\r\n            balanceSign(response[0]);\r\n            fetch(process.env.REACT_APP_API_URL + `/transactions/${response[0].id}`).then((response) => {\r\n                return response.json();\r\n            }).then((response) => {\r\n                setTransactions(response);\r\n            })\r\n        })\r\n    }, [name, update])\r\n\r\n    const balanceSign = (customer) => {\r\n        const balance = customer.facture + customer.paiement;\r\n        console.log(balance);\r\n        if (balance < 0) {\r\n            setColorText('negative');\r\n        } else {\r\n            setColorText('positive');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {currentCustomer !== undefined &&\r\n                <div>\r\n                    <h2 className=\"customerTitle\">{(currentCustomer) ? currentCustomer.name : <p>Chargement...</p>}</h2>\r\n                    <h3 className={`balance ${colorText}`}>Balance : {currentCustomer.facture + currentCustomer.paiement},00 â‚¬</h3>\r\n                </div>\r\n            }\r\n            {currentCustomer === undefined &&\r\n                <p><span>{name}</span> n'est pas un client connu</p>\r\n            }\r\n            {transactions !== undefined &&\r\n                <div className=\"container\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>designation</th>\r\n                                <th>Montant</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {transactions.map((transaction, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td> {transaction.date} </td>\r\n                                        <td> {transaction.designation} </td>\r\n                                        <td> {transaction.amount},00 â‚¬ </td>\r\n                                        <td><button className=\"btn btn-danger\">Effacer</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n            <CreateTransaction customer={name} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailCustomer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js",["67"],"import React from 'react'\r\nimport '../App.css'\r\nimport { MdDashboard, MdSupervisorAccount, MdList } from \"react-icons/md\";\r\nimport { VscDeviceMobile } from \"react-icons/vsc\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction BottomMenu() {\r\n    return (\r\n        <nav className=\"nav d-flex justify-content-around\">\r\n            <NavLink to='/mb/home' activeClassName='current' className='nav_link text-center'> <VscDeviceMobile size={25} /> <br /> <span className=\"nav_text\">Mobile</span> </NavLink>\r\n            <NavLink to='/customers' exact activeClassName='current' className=\"nav_link text-center\"><MdSupervisorAccount size={25} /> <br /> <span className=\"nav_text\"> Clients</span></NavLink>\r\n            <NavLink to='/transactions' exact activeClassName='current' className=\"nav_link text-center\"><MdList size={25} /> <br /> <span className=\"nav_text\"> Transaction</span></NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default BottomMenu\r\n","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Transactions.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\MbHome.jsx",["68"],"import React, { useState, useEffect } from 'react';\r\nimport { MdArrowDownward, MdArrowUpward } from 'react-icons/md';\r\nimport { useHistory } from 'react-router';\r\nimport '../styles/MbHome.css';\r\n\r\nconst MbHome = ({ customers }) => {\r\n\r\n    let history = useHistory();\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [totFactures, setTotFactures] = useState(0);\r\n    const [totPaiements, setTotPaiements] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API_URL + '/transactions')\r\n            .then(res => res.json())\r\n            .then(res => setTransactions(() => res));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        calcTot();\r\n    }, [transactions])\r\n\r\n    const calcTot = () => {\r\n        setTotPaiements(0);\r\n        setTotFactures(0);\r\n        transactions.forEach(transaction => {\r\n            transaction.amount > 0 ? setTotFactures(prevState => prevState + transaction.amount) : setTotPaiements(prevState => prevState - transaction.amount);\r\n        });\r\n    }\r\n\r\n    const calcBalance = (customer) => {\r\n        return (customer.facture + customer.paiement)\r\n    }\r\n\r\n    const showCustomer = (customer) => {\r\n        history.push('/customers/' + customer.name);\r\n    }\r\n\r\n    const dateSlice = (str) => {\r\n        const strSplit = str.split('-');\r\n        const strFinal = strSplit[2] + '/' + strSplit[1];\r\n        return strFinal;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header className='header-MbHome'>\r\n                <div>\r\n                    <h3>Bienvenue</h3>\r\n                    <h1>Geffrey SAID</h1>\r\n                </div>\r\n                <div className=\"profilImg\">\r\n                </div>\r\n            </header>\r\n            <div className=\"cardCustomers\">\r\n                {customers !== undefined &&\r\n                    <div className='card-list'>\r\n                        {\r\n                            customers.map(((customer, k) => {\r\n                                return (\r\n                                    <div key={k} className=\"customer-card\" onClick={() => showCustomer(customer)}>\r\n                                        <h4>{customer.name} <span>VISA</span></h4>\r\n                                        <p>{calcBalance(customer)},00 â‚¬</p>\r\n                                    </div>\r\n                                )\r\n                            }))\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"transaction-mobile\">\r\n                <div className=\"recap\">\r\n                    <div className=\"recap-card\">\r\n                        <p className='recap-arrow arrow-up'> <MdArrowUpward size={25} /> </p>\r\n                        <p> Factures <br /> <span>{totFactures},00 â‚¬</span> </p>\r\n                    </div>\r\n                    <div className=\"recap-card\">\r\n                        <p className='recap-arrow arrow-down'> <MdArrowDownward size={25} /> </p>\r\n                        <p> Paiements <br /> <span>{totPaiements},00 â‚¬</span> </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {transactions !== undefined &&\r\n                    <div className=\"transaction-list\">\r\n                        {transactions.map((transaction, k) => {\r\n                            return (\r\n                                <div key={k} className=\"transaction-line\">\r\n                                    {transaction.amount > 0 ? <p className=\"arrow-line arrow-up\"> <MdArrowUpward size={25} /> </p> : <p className=\"arrow-line arrow-down\"> <MdArrowDownward size={25} /> </p>}\r\n                                    <p className='trans-detail'> <span className=\"trans-name\">{transaction.name}</span> <span className=\"trans-date\">{dateSlice(transaction.date)}</span></p>\r\n                                    <p className=\"trans-amount\">{transaction.amount},00 â‚¬</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MbHome;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":17,"column":13,"nodeType":"75","messageId":"76","endLine":17,"endColumn":23},{"ruleId":"73","severity":1,"message":"77","line":9,"column":20,"nodeType":"75","messageId":"76","endLine":9,"endColumn":29},{"ruleId":"73","severity":1,"message":"78","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":22,"column":8,"nodeType":"81","endLine":22,"endColumn":22,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'_isMounted' is assigned a value but never used.","Identifier","unusedVar","'setUpdate' is assigned a value but never used.","'MdDashboard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calcTot'. Either include it or remove the dependency array.","ArrayExpression",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [calcTot, transactions]",{"range":"88","text":"89"},[690,704],"[calcTot, transactions]"]