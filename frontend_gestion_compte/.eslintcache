[{"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/index.js":"1","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/store.js":"2","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/App.js":"3","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Customers.jsx":"4","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Transactions.jsx":"5","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/reducerUser.js":"6","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/actionUser.js":"7","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/actionTransaction.js":"8","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/reducerCustomer.js":"9","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/reducerTransaction.js":"10","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/NotFound.js":"11","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/actionCustomer.js":"12","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/detailCustomer.js":"13","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Account.jsx":"14","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/MbHome.jsx":"15","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CustomerInfo.jsx":"16","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Auth.jsx":"17","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/type.js":"18","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/type.js":"19","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/type.js":"20","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/EditTransaction.jsx":"21","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonHeader.jsx":"22","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateTransaction.jsx":"23","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseTransaction.jsx":"24","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateCustomer.jsx":"25","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseCustomer.jsx":"26","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/TransactionItem.jsx":"27","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/EditAdd.jsx":"28","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/ListTransactions.jsx":"29"},{"size":396,"mtime":1619303227034,"results":"30","hashOfConfig":"31"},{"size":423,"mtime":1619037643897,"results":"32","hashOfConfig":"31"},{"size":3464,"mtime":1620421784675,"results":"33","hashOfConfig":"31"},{"size":2651,"mtime":1621673211387,"results":"34","hashOfConfig":"31"},{"size":3753,"mtime":1621676158375,"results":"35","hashOfConfig":"31"},{"size":786,"mtime":1619303227030,"results":"36","hashOfConfig":"31"},{"size":421,"mtime":1618866126229,"results":"37","hashOfConfig":"31"},{"size":620,"mtime":1621090029611,"results":"38","hashOfConfig":"31"},{"size":1293,"mtime":1621198484509,"results":"39","hashOfConfig":"31"},{"size":1695,"mtime":1621113472503,"results":"40","hashOfConfig":"31"},{"size":180,"mtime":1619303227034,"results":"41","hashOfConfig":"31"},{"size":843,"mtime":1621198031110,"results":"42","hashOfConfig":"31"},{"size":3564,"mtime":1620917308091,"results":"43","hashOfConfig":"31"},{"size":167,"mtime":1619303227034,"results":"44","hashOfConfig":"31"},{"size":3711,"mtime":1621681473531,"results":"45","hashOfConfig":"31"},{"size":1900,"mtime":1621703969779,"results":"46","hashOfConfig":"31"},{"size":8021,"mtime":1621667557977,"results":"47","hashOfConfig":"31"},{"size":117,"mtime":1618866126229,"results":"48","hashOfConfig":"31"},{"size":215,"mtime":1619303227030,"results":"49","hashOfConfig":"31"},{"size":191,"mtime":1619303227030,"results":"50","hashOfConfig":"31"},{"size":4973,"mtime":1621675961420,"results":"51","hashOfConfig":"31"},{"size":303,"mtime":1620585530112,"results":"52","hashOfConfig":"31"},{"size":5208,"mtime":1621676265569,"results":"53","hashOfConfig":"31"},{"size":1451,"mtime":1621626184713,"results":"54","hashOfConfig":"31"},{"size":2549,"mtime":1621180663680,"results":"55","hashOfConfig":"31"},{"size":1162,"mtime":1621626344397,"results":"56","hashOfConfig":"31"},{"size":1385,"mtime":1621675976459,"results":"57","hashOfConfig":"31"},{"size":659,"mtime":1621666483414,"results":"58","hashOfConfig":"31"},{"size":566,"mtime":1621675688998,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1io7ldn",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/index.js",[],["127","128"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/store.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/App.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Customers.jsx",["129"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport '../styles/Customers.css';\nimport CustomerInfo from '../components/CustomerInfo';\nimport CreateCustomer from '../components/CreateCustomer';\nimport { AiOutlineLeftCircle } from 'react-icons/ai';\n\nimport { ReactComponent as HeaderImg } from '../styles/img/header-customer.svg'\nimport EditAdd from '../components/smallComponents/EditAdd';\n\nconst Customers = () => {\n\n    const customers = useSelector(state => state.customers.customers);\n    const user = useSelector(state => state.user.info);\n    let history = useHistory();\n    useEffect(() => {\n        if (user.id === null) {\n            history.push('/login');\n        }\n    }, [])\n\n    const refCreateCustomer = useRef(null);\n    const customersList = useRef(null);\n\n    const [editCustomer, setEditCustomer] = useState(false);\n    const [activeAdd, setactiveAdd] = useState(false);\n\n    const goToCustomer = (customer) => {\n        history.push('/customers/' + customer.name);\n    }\n\n    const showCreateCustomer = () => {\n        refCreateCustomer.current.className = 'create-customer show';\n        setactiveAdd(true);\n    }\n\n    const hideCreateCustomer = () => {\n        refCreateCustomer.current.className = 'create-customer';\n        setactiveAdd(false);\n    }\n\n    const switchEditCustomer = () => {\n        setEditCustomer(!editCustomer);\n    }\n\n    const goToHome = () => {\n        history.push('/');\n    }\n\n    return (\n        <div className=\"customers-component\">\n            <h1 className=\"title-component\"> <AiOutlineLeftCircle size={30} className=\"header-backward\" onClick={goToHome} /> Client</h1>\n            <div className=\"header-component\">\n                <HeaderImg className=\"header-img\" />\n            </div>\n            <div>\n                <EditAdd add={showCreateCustomer} edit={switchEditCustomer} editActive={editCustomer} addActive={activeAdd} />\n                <CreateCustomer ref={refCreateCustomer} hideCreateCustomer={hideCreateCustomer} />\n            </div>\n            <div ref={customersList} className=\"customers-list\">\n                {customers.map((customer, k) => {\n                    return (\n                        <div key={k} className=\"customers-customerInfo\">\n                            <div>\n                                <CustomerInfo goToCustomer={goToCustomer} customer={customer} edit={editCustomer} />\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default Customers;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Transactions.jsx",["130"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/reducerUser.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/actionUser.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/actionTransaction.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/reducerCustomer.js",["131"],"import { CUSTOMER_ADD, CUSTOMER_ERASE, CUSTOMER_REINIT, CUSTOMER_UPDATE } from './type';\n\nconst initialState = {\n    customers: []\n}\n\nconst customerReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case CUSTOMER_ADD:\n            return {\n                ...state,\n                customers: [...state.customers, action.customer]\n            }\n        case CUSTOMER_UPDATE:\n            const indexCustomer = state.customers.findIndex(cust => cust.name == action.customer);\n            if (indexCustomer > -1) {\n                state.customers[indexCustomer].paiement = action.paiement;\n                state.customers[indexCustomer].facture = action.facture;\n            }\n            return state;\n        case CUSTOMER_ERASE:\n            const indexCustomerToErase = state.customers.findIndex(cust => cust.id === action.customer.id);\n            const customersAfterErase = state.customers;\n            customersAfterErase.splice(indexCustomerToErase, 1);\n            return {\n                ...state,\n                customers: customersAfterErase\n            }\n        case CUSTOMER_REINIT:\n            return {\n                customers: initialState.customers\n            }\n        default:\n            return state;\n    }\n}\n\nexport default customerReducer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/reducerTransaction.js",["132"],"import { TRANSACTION_ADD, TRANSACTION_REINIT, TRANSACTION_UPDATE, TRANSACTION_ERASE } from './type';\n\nconst initialState = {\n    transactions: []\n}\n\nconst transactionReducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case TRANSACTION_ADD:\n            const transactionsAfterAdd = [action.transaction, ...state.transactions];\n            transactionsAfterAdd.sort((a, b) => {\n                if(a.date < b.date) {\n                    return 1;\n                }\n                if(a.date > b.date) {\n                    return -1;\n                }\n            })\n            return {\n                ...state,\n                transactions: transactionsAfterAdd\n            }\n        case TRANSACTION_REINIT:\n            return {\n                transactions: initialState.transactions\n            }\n        case TRANSACTION_UPDATE:\n            const indexOfTransaction = state.transactions.findIndex(trans => trans.id === action.transaction.id);\n            const newTransactions = state.transactions;\n            newTransactions[indexOfTransaction] = action.transaction;\n            return {\n                ...state,\n                transactions: newTransactions\n            }\n        case TRANSACTION_ERASE:\n            const indexOfTransactionDelete = state.transactions.findIndex(trans => trans.id === action.id_transaction)\n            const transactionsAfterDelete = state.transactions;\n            transactionsAfterDelete.splice(indexOfTransactionDelete, 1)\n            return {\n                ...state,\n                transactions: transactionsAfterDelete\n            }\n        default:\n            return state;\n    }\n}\n\nexport default transactionReducer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/NotFound.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/actionCustomer.js",["133","134"],"import { CUSTOMER_UPDATE, CUSTOMER_ADD, CUSTOMER_REINIT, CUSTOMER_ERASE } from './type';\n\nexport const customerAdd = (customer) => {\n    return {\n        type: CUSTOMER_ADD,\n        customer: customer\n    }\n}\n\nexport const customerUpdate = (transactions, name_customer) => {\n    let paiement = 0;\n    let facture = 0;\n    transactions.map(trans => {\n        if (trans.name == name_customer) {\n            trans.amount > 0 ? facture += trans.amount : paiement+= trans.amount;\n        }\n    })\n    return {\n        type: CUSTOMER_UPDATE,\n        customer: name_customer,\n        paiement: paiement,\n        facture: facture\n    }\n}\n\nexport const customerErase = (customer) => {\n    return {\n        type: CUSTOMER_ERASE,\n        customer: customer\n    }\n}\n\nexport const customerReinit = () => {\n    return {\n        type: CUSTOMER_REINIT\n    }\n}","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/detailCustomer.js",["135","136","137","138"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/detailCustomer.css';\r\nimport CreateTransaction from './CreateTransaction.jsx';\r\n\r\nconst DetailCustomer = () => {\r\n    \r\n    const customers = useSelector(state => state.customers.customers)\r\n    const transactions = useSelector(state => state.transactions.transactions)\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const { name } = useParams();\r\n    const [currentCustomer, setCurrentCustomer] = useState('');\r\n    const [customerTransactions, setCustomerTransactions] = useState([]);\r\n    const [colorText, setColorText] = useState('');\r\n\r\n    useEffect(() => {\r\n        const indexOfCustomer = customers.findIndex(cust => cust.name === name);\r\n        setCurrentCustomer(customers[indexOfCustomer]);\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        balanceSign(currentCustomer);\r\n        const transactionList = []\r\n        transactions.map(trans => {\r\n            if(trans.name === currentCustomer.name) {\r\n                transactionList.push(trans);\r\n            }\r\n        });\r\n        setCustomerTransactions(transactionList);\r\n    }, [currentCustomer]);\r\n\r\n    const balanceSign = (customer) => {\r\n        const balance = customer.facture + customer.paiement;\r\n        if (balance < 0) {\r\n            setColorText('negative');\r\n        } else {\r\n            setColorText('positive');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {currentCustomer !== undefined &&\r\n                <div>\r\n                    <h2 className=\"customerTitle\">{(currentCustomer) ? currentCustomer.name : <p>Chargement...</p>}</h2>\r\n                    <h3 className={`balance ${colorText}`}>Balance : {currentCustomer.facture + currentCustomer.paiement},00 €</h3>\r\n                </div>\r\n            }\r\n            {currentCustomer === undefined &&\r\n                <p><span>{name}</span> n'est pas un client connu</p>\r\n            }\r\n            {customerTransactions !== undefined &&\r\n                <div className=\"container\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>designation</th>\r\n                                <th>Montant</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {customerTransactions.map((transaction, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td> {transaction.date} </td>\r\n                                        <td> {transaction.designation} </td>\r\n                                        <td> {transaction.amount},00 € </td>\r\n                                        <td><button className=\"btn btn-danger\">Effacer</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n            <CreateTransaction nameCustomer={name} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailCustomer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Account.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/MbHome.jsx",["139","140"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CustomerInfo.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Auth.jsx",["141"],"import React, { useRef, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { FaEnvelope, FaExternalLinkAlt, FaLinkedinIn, FaLock, FaRegEnvelope, FaUser, FaWhatsapp } from 'react-icons/fa';\nimport { ReactComponent as Signinlogo } from '../styles/img/sign-in-logo.svg';\nimport { ReactComponent as Signuplogo } from '../styles/img/sign-up-logo.svg';\nimport '../styles/Auth.css';\nimport axios from 'axios';\nimport { userInfo } from '../Redux/User/actionUser';\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\n\nconst Auth = () => {\n\n    let history = useHistory();\n    const dispatch = useDispatch();\n\n    const [userLogin, setUserLogin] = useState({\n        usernameLogin: 'demo',\n        passwordLogin: 'demo'\n    });\n\n    const [userRegistration, setUserRegistration] = useState({\n        usernameRegistration: '',\n        emailRegistration: '',\n        passwordRegistration: '',\n        confirmPassword: ''\n    });\n\n    const handleChangeLogin = e => {\n        setUserLogin({ ...userLogin, [e.target.id]: e.target.value });\n    }\n\n    const handleChangeRegistration = e => {\n        setUserRegistration({ ...userRegistration, [e.target.id]: e.target.value });\n    }\n\n    const authContainer = useRef(null);\n\n    const [signUpMode, setSignUpMode] = useState('');\n    const [themeColor, setThemeColor] = useState('#2271FF');\n\n    const showSignup = () => {\n        setSignUpMode('sign-up-mode');\n    };\n\n    const showLogin = () => {\n        setSignUpMode('');\n    }\n\n    const login = () => {\n        axios.post(process.env.REACT_APP_API_URL + '/login', userLogin)\n            .then(response => {\n                if (response.data.message) {\n                    alert(response.data.message);\n                } else {\n                    dispatch(userInfo(response.data));\n                    getData(response.data.id);\n                    history.push('/');\n                }\n            })\n    }\n\n    const register = () => {\n        axios.post(process.env.REACT_APP_API_URL + '/register', userRegistration)\n            .then(() => {\n                setUserLogin({\n                    usernameLogin: userRegistration.usernameRegistration,\n                    passwordLogin: userRegistration.passwordRegistration\n                })\n                login();\n            })\n            .catch((error) => alert('Une erreur est survenue. ' + error));\n    }\n\n    const getData = (id_user) => {\n        axios.get(process.env.REACT_APP_API_URL + '/customers/' + id_user)\n            .then(res => res.data.forEach(cust => dispatch(customerAdd(cust))))\n            .catch(err => alert(err));\n\n        axios.get(process.env.REACT_APP_API_URL + '/transactions/' + id_user)\n            .then(res => res.data.forEach(trans => dispatch(transactionAdd(trans))))\n            .catch(err => alert(err));\n    }\n\n\n    const { usernameLogin, passwordLogin } = userLogin;\n    const { usernameRegistration, emailRegistration, passwordRegistration, confirmPassword } = userRegistration;\n\n    const disableRegistration = usernameRegistration === '' || emailRegistration === '' || passwordRegistration === '' || passwordRegistration !== confirmPassword ? true : false;\n    const disableLogin = usernameLogin === '' || passwordLogin === '' ? true : false;\n\n    return (\n        <div className={'auth-container ' + signUpMode} ref={authContainer}>\n\n\n            <div className=\"form-container\">\n\n                <div className=\"signin-signup\">\n\n                    <form className=\"sign-in-form\">\n                        <h2 className=\"title\">Se connecter</h2>\n                        <div className=\"input-field\">\n                            <i> <FaUser /> </i>\n                            <input type=\"text\" placeholder=\"Nom d'utilisateur\" id=\"usernameLogin\" value={usernameLogin} onChange={handleChangeLogin} />\n                        </div>\n                        <div className=\"input-field\">\n                            <i> <FaLock /> </i>\n                            <input type=\"password\" placeholder=\"Mot de passe\" id=\"passwordLogin\" value={passwordLogin} onChange={handleChangeLogin} />\n                        </div>\n                        <input type=\"button\" value=\"Login\" onClick={login} className=\"sign-btn solid\" disabled={disableLogin} />\n\n                        <p className=\"social-text\">Contactez-moi sur mes réseaux</p>\n                        <div className=\"social-media\">\n                            <a href=\"/\" className=\"social-icon\"> <FaRegEnvelope /> </a>\n                            <a href=\"/\" className=\"social-icon\"> <FaWhatsapp /> </a>\n                            <a href=\"/\" className=\"social-icon\"> <FaLinkedinIn /> </a>\n                            <a href=\"/\" className=\"social-icon\"> <FaExternalLinkAlt /> </a>\n                        </div>\n                    </form>\n\n\n                    <form className=\"sign-up-form\">\n                        <h2 className=\"title\">S'inscrire</h2>\n                        <div className=\"input-field\">\n                            <i> <FaUser /> </i>\n                            <input type=\"text\" placeholder=\"Nom d'utilisateur\" id=\"usernameRegistration\" value={usernameRegistration} onChange={handleChangeRegistration} />\n                        </div>\n                        <div className=\"input-field\">\n                            <i> <FaEnvelope /> </i>\n                            <input type=\"text\" placeholder=\"Email\" id=\"emailRegistration\" value={emailRegistration} onChange={handleChangeRegistration} />\n                        </div>\n                        <div className=\"input-field\">\n                            <i> <FaLock /> </i>\n                            <input type=\"password\" placeholder=\"Mot de passe\" id=\"passwordRegistration\" value={passwordRegistration} onChange={handleChangeRegistration} />\n                        </div>\n                        <div className=\"input-field\">\n                            <i> <FaLock /> </i>\n                            <input type=\"password\" placeholder=\"Confirmer mot de passe\" id=\"confirmPassword\" value={confirmPassword} onChange={handleChangeRegistration} />\n                        </div>\n                        <input type=\"button\" value=\"S'inscrire\" onClick={register} className=\"sign-btn solid\" disabled={disableRegistration} />\n\n                        <p className=\"social-text\">Contactez-moi sur mes réseaux.</p>\n                        <div className=\"social-media\">\n                            <a href=\"/\" className=\"social-icon\"> <FaRegEnvelope /> </a>\n                            <a href=\"/\" className=\"social-icon\"> <FaWhatsapp /> </a>\n                            <a href=\"/\" className=\"social-icon\"> <FaLinkedinIn /> </a>\n                            <a href=\"/\" className=\"social-icon\"> <FaExternalLinkAlt /> </a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n\n\n\n            <div className=\"panels-container\">\n\n                <div className=\"panel left-panel\">\n                    <div className=\"content\">\n                        <h3>Nouveau ici ?</h3>\n                        <p>N'hesitez pas, créer votre compte GRATUITEMENT maintenant.</p>\n                        <button className=\"sign-btn transparent\" onClick={showSignup}>S'inscrire</button>\n                    </div>\n                    <Signuplogo className=\"image\" fill={themeColor} />\n                </div>\n\n                <div className=\"panel right-panel\">\n                    <div className=\"content\">\n                        <h3>Déja client(e) ?</h3>\n                        <p>Connectez-vous maintenant.</p>\n                        <button className=\"sign-btn transparent\" onClick={showLogin}>Se connecter</button>\n                    </div>\n                    <Signinlogo className=\"image\" fill={themeColor} />\n                </div>\n            </div>\n\n\n\n\n        </div>\n    );\n};\n\n\nexport default Auth;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/EditTransaction.jsx",["142","143"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonHeader.jsx",[],["144","145"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateTransaction.jsx",["146","147"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseTransaction.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateCustomer.jsx",["148"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport '../styles/CreateCustomer.css';\r\n\r\nconst CreateCustomer = React.forwardRef((props, ref) => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [customer, setCustomer] = useState({\r\n        nameCustomer: '',\r\n        email: '',\r\n        id_user: user.id\r\n    })\r\n\r\n    const changeHandler = e => {\r\n        setCustomer({ ...customer, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/customers', customer)\r\n            .then((res) => {\r\n                dispatch(customerAdd(res.data));\r\n                setCustomer({ nameCustomer: '', email: '', id_user: user.id });\r\n                props.hideCreateCustomer();\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const { nameCustomer, email } = customer;\r\n\r\n    const disabledAdd = nameCustomer === \"\" ? true : false;\r\n\r\n    return (\r\n        <div className=\"create-customer\" ref={ref}>\r\n            <div className=\"container\">\r\n                <div className=\"CC-title\">\r\n                    <h3>Ajouter un client</h3>\r\n                </div>\r\n                <form onSubmit={submitHandler}>\r\n\r\n                    <div className=\"CC-item name\">\r\n                        <label htmlFor=\"nameCustomer\">Nom</label>\r\n                        <input type=\"text\" name=\"nameCustomer\" placeholder=\"Nom du client\" value={nameCustomer} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"CC-item email\">\r\n                        <label htmlFor=\"email\">E-mail</label>\r\n                        <input type=\"email\" name=\"email\" placeholder=\"exemple@mail.com\" value={email} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"CC-btn btn-add\" disabled={disabledAdd}>Ajouter</button>\r\n                    <button type=\"button\" className=\"CC-btn btn-cancel\" onClick={props.hideCreateCustomer}>Annuler</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CreateCustomer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseCustomer.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/TransactionItem.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/EditAdd.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/ListTransactions.jsx",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":22,"column":8,"nodeType":"155","endLine":22,"endColumn":10,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"154","line":24,"column":8,"nodeType":"155","endLine":24,"endColumn":10,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":15,"column":79,"nodeType":"160","messageId":"161","endLine":15,"endColumn":81},{"ruleId":"162","severity":1,"message":"163","line":11,"column":46,"nodeType":"164","messageId":"165","endLine":11,"endColumn":48},{"ruleId":"162","severity":1,"message":"166","line":13,"column":28,"nodeType":"164","messageId":"167","endLine":13,"endColumn":30},{"ruleId":"158","severity":1,"message":"159","line":14,"column":24,"nodeType":"160","messageId":"161","endLine":14,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":18,"column":8,"nodeType":"155","endLine":18,"endColumn":10,"suggestions":"168"},{"ruleId":"153","severity":1,"message":"169","line":28,"column":8,"nodeType":"155","endLine":28,"endColumn":10,"suggestions":"170"},{"ruleId":"162","severity":1,"message":"166","line":33,"column":32,"nodeType":"164","messageId":"167","endLine":33,"endColumn":34},{"ruleId":"153","severity":1,"message":"171","line":39,"column":8,"nodeType":"155","endLine":39,"endColumn":25,"suggestions":"172"},{"ruleId":"153","severity":1,"message":"154","line":17,"column":8,"nodeType":"155","endLine":17,"endColumn":10,"suggestions":"173"},{"ruleId":"153","severity":1,"message":"174","line":25,"column":8,"nodeType":"155","endLine":25,"endColumn":22,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":41,"column":24,"nodeType":"178","messageId":"179","endLine":41,"endColumn":37},{"ruleId":"153","severity":1,"message":"180","line":35,"column":8,"nodeType":"155","endLine":35,"endColumn":27,"suggestions":"181"},{"ruleId":"158","severity":1,"message":"159","line":66,"column":65,"nodeType":"160","messageId":"161","endLine":66,"endColumn":67},{"ruleId":"149","replacedBy":"182"},{"ruleId":"151","replacedBy":"183"},{"ruleId":"176","severity":1,"message":"184","line":1,"column":38,"nodeType":"178","messageId":"179","endLine":1,"endColumn":44},{"ruleId":"153","severity":1,"message":"185","line":30,"column":8,"nodeType":"155","endLine":30,"endColumn":10,"suggestions":"186"},{"ruleId":"153","severity":1,"message":"154","line":17,"column":8,"nodeType":"155","endLine":17,"endColumn":10,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["190"],["191"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside",["192"],"React Hook useEffect has missing dependencies: 'customers' and 'name'. Either include them or remove the dependency array.",["193"],"React Hook useEffect has a missing dependency: 'transactions'. Either include it or remove the dependency array.",["194"],["195"],"React Hook useEffect has a missing dependency: 'calcTot'. Either include it or remove the dependency array.",["196"],"no-unused-vars","'setThemeColor' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'customers', 'ref', and 'user.id'. Either include them or remove the dependency array.",["197"],["188"],["189"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'customers' and 'props.nameCustomer'. Either include them or remove the dependency array.",["198"],["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},{"desc":"200","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"200","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"200","fix":"215"},"Update the dependencies array to be: [history, user.id]",{"range":"216","text":"217"},{"range":"218","text":"217"},{"range":"219","text":"217"},"Update the dependencies array to be: [customers, name]",{"range":"220","text":"221"},"Update the dependencies array to be: [currentCustomer, transactions]",{"range":"222","text":"223"},{"range":"224","text":"217"},"Update the dependencies array to be: [calcTot, transactions]",{"range":"225","text":"226"},"Update the dependencies array to be: [customers, props.transaction, ref, user.id]",{"range":"227","text":"228"},"Update the dependencies array to be: [customers, props.nameCustomer]",{"range":"229","text":"230"},{"range":"231","text":"217"},[785,787],"[history, user.id]",[944,946],[678,680],[1084,1086],"[customers, name]",[1417,1434],"[currentCustomer, transactions]",[588,590],[834,848],"[calcTot, transactions]",[1354,1373],"[customers, props.transaction, ref, user.id]",[1194,1196],"[customers, props.nameCustomer]",[553,555]]