[{"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js":"1","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js":"2","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js":"3","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js":"4","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js":"5","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\store.js":"6","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Login.jsx":"7","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js":"8","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js":"9","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\reducerUser.js":"10","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\actionUser.js":"11","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js":"12","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js":"13","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\type.js":"14","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\MbHome.jsx":"15","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Transactions.js":"16","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\reducerCustomer.js":"17","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\type.js":"18","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\actionCustomer.js":"19","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\reducerTransaction.js":"20","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\type.js":"21","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\actionTransaction.js":"22","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Auth.jsx":"23","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Account.jsx":"24","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Customers.jsx":"25"},{"size":396,"mtime":1619278454276,"results":"26","hashOfConfig":"27"},{"size":3429,"mtime":1619298126861,"results":"28","hashOfConfig":"27"},{"size":886,"mtime":1619186313455,"results":"29","hashOfConfig":"27"},{"size":3530,"mtime":1619290010015,"results":"30","hashOfConfig":"27"},{"size":180,"mtime":1619281472769,"results":"31","hashOfConfig":"27"},{"size":436,"mtime":1618952431002,"results":"32","hashOfConfig":"27"},{"size":6088,"mtime":1619173959931,"results":"33","hashOfConfig":"27"},{"size":4483,"mtime":1619282620990,"results":"34","hashOfConfig":"27"},{"size":218,"mtime":1618844577099,"results":"35","hashOfConfig":"27"},{"size":822,"mtime":1619280472510,"results":"36","hashOfConfig":"27"},{"size":445,"mtime":1618850044092,"results":"37","hashOfConfig":"27"},{"size":584,"mtime":1618844577098,"results":"38","hashOfConfig":"27"},{"size":2419,"mtime":1619282628435,"results":"39","hashOfConfig":"27"},{"size":119,"mtime":1618850004797,"results":"40","hashOfConfig":"27"},{"size":4229,"mtime":1619297506026,"results":"41","hashOfConfig":"27"},{"size":3713,"mtime":1619302494776,"results":"42","hashOfConfig":"27"},{"size":560,"mtime":1619281168206,"results":"43","hashOfConfig":"27"},{"size":194,"mtime":1619280089956,"results":"44","hashOfConfig":"27"},{"size":391,"mtime":1619280192541,"results":"45","hashOfConfig":"27"},{"size":595,"mtime":1619281286081,"results":"46","hashOfConfig":"27"},{"size":218,"mtime":1619279957061,"results":"47","hashOfConfig":"27"},{"size":305,"mtime":1619281211457,"results":"48","hashOfConfig":"27"},{"size":8126,"mtime":1619293338794,"results":"49","hashOfConfig":"27"},{"size":177,"mtime":1619297985878,"results":"50","hashOfConfig":"27"},{"size":2168,"mtime":1619302209213,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1t1cr17",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js",[],["108","109"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js",[],["110","111"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js",["112","113","114","115"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\store.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Login.jsx",["116","117"],"import React, { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userInfo } from '../Redux/User/actionUser';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport '../styles/Login.css';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\r\n\r\nconst Login = () => {\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [userInput, setUserInput] = useState({\r\n        usernameLogin: 'admin',\r\n        passwordLogin: 'admin'\r\n    });\r\n\r\n    const [userRegistration, setUserRegistration] = useState({\r\n        usernameRegistration: '',\r\n        emailRegistration: '',\r\n        passwordRegistration: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const handleChangeInput = e => {\r\n        setUserInput({ ...userInput, [e.target.id]: e.target.value })\r\n    }\r\n\r\n    const handleChangeRegistration = e => {\r\n        setUserRegistration({ ...userRegistration, [e.target.id]: e.target.value });\r\n    }\r\n\r\n    const loginCheck = useRef(null);\r\n    const loginForm = useRef(null);\r\n    const signupForm = useRef(null);\r\n    const titleRef = useRef(null);\r\n\r\n    const showLogin = () => {\r\n        loginCheck.current.checked = true;\r\n        loginForm.current.className = 'login';\r\n        titleRef.current.className = 'title login';\r\n    }\r\n\r\n    const showSignup = () => {\r\n        signupForm.current.checked = true;\r\n        loginForm.current.className = 'login loginHide';\r\n        titleRef.current.className = 'title login loginHide';\r\n    }\r\n\r\n    const { usernameLogin, passwordLogin } = userInput;\r\n    const { usernameRegistration, emailRegistration, passwordRegistration, confirmPassword } = userRegistration;\r\n\r\n    const disableLogin = usernameLogin === '' || passwordLogin === '' ? true : false;\r\n    const disableSignup = emailRegistration === '' || passwordRegistration === '' || confirmPassword !== passwordRegistration ? true : false;\r\n    const passwordNotEqual = passwordRegistration !== confirmPassword ? true : false;\r\n\r\n    const login = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/login', { usernameLogin: userInput.usernameLogin, passwordLogin: userInput.passwordLogin })\r\n            .then(response => {\r\n                if (response.data.message) {\r\n                    alert(response.data.message);\r\n                } else {\r\n                    dispatch(userInfo(response.data));\r\n                    console.log(response.data.id);\r\n                    getData(response.data.id);\r\n                    history.push('/');\r\n                }\r\n            })\r\n    }\r\n\r\n    const getData = (id_user) => {\r\n        axios.get(process.env.REACT_APP_API_URL + '/customers/' + id_user)\r\n            .then(res => res.data.forEach(cust => dispatch(customerAdd(cust))))\r\n            .catch(err => alert(err));\r\n\r\n        axios.get(process.env.REACT_APP_API_URL + '/transactions/' + id_user)\r\n            .then(res => res.data.forEach(trans => dispatch(transactionAdd(trans))))\r\n            .catch(err => alert(err));\r\n        // axios.get(process.env.REACT_APP_API_URL + '/transactions/' + id_user)\r\n        //     .then(res => console.log(res.data))\r\n        //     .catch(err => alert(err));\r\n    }\r\n\r\n    const register = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/register', userRegistration)\r\n            .then(response => dispatch(userInfo(response.data)))\r\n            .catch((error) => alert('Une erreur est survenue. ' + error));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n\r\n                <form action=\"#\" id=\"loginForm\" ref={loginForm}>\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='usernameLogin' onChange={handleChangeInput} value={usernameLogin} placeholder=\"Pseudo\" required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='passwordLogin' onChange={handleChangeInput} value={passwordLogin} placeholder=\"Mot de passe\" required />\r\n                    </div>\r\n                    <div className=\"pass-link\"><p>Mot de passe oublié ?</p></div>\r\n                    <div className=\"field\">\r\n                        <input type=\"submit\" onClick={login} value=\"Connexion\" disabled={disableLogin} />\r\n                    </div>\r\n                    <div className=\"signup-link\">Pas encore membre ? <p onClick={showSignup}>S'enregistrer</p></div>\r\n                </form>\r\n\r\n                <form action=\"#\" className=\"signupForm\">\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='usernameRegistration' placeholder=\"Pseudo\" onChange={handleChangeRegistration} value={usernameRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='emailRegistration' placeholder=\"Adresse e-mail\" onChange={handleChangeRegistration} value={emailRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='passwordRegistration' placeholder=\"Mot de passe\" onChange={handleChangeRegistration} value={passwordRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='confirmPassword' placeholder=\"Confirmer mot de passe\" onChange={handleChangeRegistration} value={confirmPassword} required />\r\n                        {passwordNotEqual &&\r\n                            <p>Mot de passe différent</p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"submit\" onClick={register} value=\"S'inscrire\" disabled={disableSignup} />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;",["118","119"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js",["120"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\r\n\r\nconst CreateTransaction = ({ nameCustomer }) => {   \r\n\r\n    const customers = useSelector(state => state.customers.customers);\r\n    const user = useSelector(state => state.user.info);\r\n    const dispatch = useDispatch();\r\n    const [currentCustomer, setCurrentCustomer] = useState({name: ''});\r\n\r\n    const [transactionToAdd, setTransactionToAdd] = useState({\r\n        date: '',\r\n        customer: '',\r\n        designation: '',\r\n        amount: 0,\r\n        id_user: user.id\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (nameCustomer) {\r\n            const indexOfCustomer = customers.findIndex(cust => cust.name === nameCustomer);\r\n            setCurrentCustomer(customers[indexOfCustomer]);\r\n        }\r\n    }, [])\r\n\r\n    \r\n\r\n    const changeHandler = e => {\r\n        if (e.target.name === 'date') {\r\n            setTransactionToAdd({ ...transactionToAdd, date: e.target.value.toLocaleString() });\r\n        } else {\r\n            setTransactionToAdd({ ...transactionToAdd, [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        let transactionSend = {};\r\n        if (!nameCustomer) {\r\n            transactionSend = transactionToAdd;\r\n        } else {\r\n            transactionSend = { ...transactionToAdd, customer: currentCustomer.id }\r\n        }\r\n        axios.post(process.env.REACT_APP_API_URL + '/transactions', transactionSend)\r\n            .then(() => {\r\n                dispatch(transactionAdd(transactionSend));\r\n                setTransactionToAdd({\r\n                    date: '',\r\n                    customer: '',\r\n                    designation: '',\r\n                    amout: 0,\r\n                    id_user: user.id\r\n                });\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const { date, customer, designation, amount } = transactionToAdd;\r\n    return (\r\n        <div className=\"row\">\r\n            <form onSubmit={submitHandler} className=\"my-5\">\r\n                <div className=\"input-group align-items-end col-sm-12\">\r\n                    <div className=\"col-6 pe-1\">\r\n                        <label htmlFor=\"date\" className=\"form-label mx-3\">Date : </label>\r\n                        <input type=\"date\" name='date' className=\"form-control\" value={date} onChange={changeHandler} min=\"2019-01-01\" max=\"2021-12-31\" />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 ps-1\">\r\n                        <label htmlFor=\"customer\" className=\"form-label mx-3\">Client : </label>\r\n                        { nameCustomer !== undefined &&\r\n                            <input type=\"text\" className=\"form-control\" name=\"customer\" value={currentCustomer.name} disabled/>\r\n                        }\r\n\r\n                        { nameCustomer === undefined &&\r\n                            <select className=\"form-select\" name=\"customer\" value={customer} onChange={changeHandler}>\r\n                                <option value=''></option>\r\n                                {customers.map((customer, k) => {\r\n                                    return (\r\n                                        <option key={k} value={customer.id}>{customer.name}</option>\r\n                                    )\r\n                                })}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-6 mt-3 pe-1\">\r\n                        <label htmlFor=\"designation\" className=\"form-label mx-3\">Designation : </label>\r\n                        <input type=\"text\" name='designation' className=\"form-control\" value={designation} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 ps-1\">\r\n                        <label htmlFor=\"amount\" className=\"form-label mx-3\">Montant : </label>\r\n                        <input type=\"number\" name='amount' className=\"form-control\" value={amount} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"mx-auto mt-3\">\r\n                        <button type='submit' className=\"btn btn-success px-5\">Ajouter</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTransaction;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\reducerUser.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\actionUser.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js",["121"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst CreateCustomer = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [customer, setCustomer] = useState({\r\n        nameCustomer: '',\r\n        email: '',\r\n        id_user: user.id\r\n    })\r\n\r\n    const changeHandler = e => {\r\n        console.log(e);\r\n        console.log(customer);\r\n        setCustomer({...customer, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/customers', customer)\r\n            .then(() => {\r\n                dispatch(customerAdd(user.id));\r\n                setCustomer({ nameCustomer: '', email: '', id_user: user.id});\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const testRqt = () => {\r\n        console.log(customer);\r\n    }\r\n\r\n    const { nameCustomer, email } = customer;\r\n    return (\r\n        <div className=\"row\">\r\n            <form onSubmit={submitHandler} className=\"mt-4\">\r\n                <div className=\"input-group align-items-end\">\r\n                    <div className=\"col-6 pe1\">\r\n                        <label htmlFor=\"nameCustomer\" className=\"form-label ms-5 me-2\">Nom : </label>\r\n                        <input type=\"text\" name='nameCustomer' className=\"form-control\" value={nameCustomer} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 pe1\">\r\n                        <label htmlFor=\"email\" className=\"form-label ms-5 me-2\">e-mail : </label>\r\n                        <input type=\"email\" name='email' className=\"form-control\" value={email} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <button type='submit' className=\"btn btn-success mx-auto mt-3\">Ajouter</button>\r\n                    <button type='button' onClick={testRqt} className=\"btn btn-info mx-auto mt-3\">Info</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCustomer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\MbHome.jsx",["122","123"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Transactions.js",["124","125"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\reducerCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\actionCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\reducerTransaction.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\actionTransaction.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Auth.jsx",["126"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Account.jsx",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Customers.jsx",["127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"129","replacedBy":"133"},{"ruleId":"131","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":18,"column":8,"nodeType":"137","endLine":18,"endColumn":10,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":29,"column":8,"nodeType":"137","endLine":29,"endColumn":10,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":32,"column":32,"nodeType":"143","messageId":"144","endLine":32,"endColumn":34},{"ruleId":"135","severity":1,"message":"145","line":37,"column":8,"nodeType":"137","endLine":37,"endColumn":25,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":23,"nodeType":"149","messageId":"150","endLine":2,"endColumn":34},{"ruleId":"147","severity":1,"message":"151","line":40,"column":11,"nodeType":"149","messageId":"150","endLine":40,"endColumn":20},{"ruleId":"129","replacedBy":"152"},{"ruleId":"131","replacedBy":"153"},{"ruleId":"135","severity":1,"message":"154","line":26,"column":8,"nodeType":"137","endLine":26,"endColumn":10,"suggestions":"155"},{"ruleId":"135","severity":1,"message":"136","line":15,"column":8,"nodeType":"137","endLine":15,"endColumn":10,"suggestions":"156"},{"ruleId":"135","severity":1,"message":"136","line":16,"column":8,"nodeType":"137","endLine":16,"endColumn":10,"suggestions":"157"},{"ruleId":"135","severity":1,"message":"158","line":24,"column":8,"nodeType":"137","endLine":24,"endColumn":22,"suggestions":"159"},{"ruleId":"147","severity":1,"message":"160","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":13},{"ruleId":"135","severity":1,"message":"136","line":18,"column":8,"nodeType":"137","endLine":18,"endColumn":10,"suggestions":"161"},{"ruleId":"147","severity":1,"message":"162","line":41,"column":24,"nodeType":"149","messageId":"150","endLine":41,"endColumn":37},{"ruleId":"147","severity":1,"message":"163","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":18,"column":8,"nodeType":"137","endLine":18,"endColumn":10,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],["165"],["166"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has missing dependencies: 'currentCustomer', 'customers', and 'name'. Either include them or remove the dependency array.",["168"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'customerTransactions' and 'transactions'. Either include them or remove the dependency array. You can also do a functional update 'setCustomerTransactions(c => ...)' if you only need 'customerTransactions' in the 'setCustomerTransactions' call.",["169"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'showLogin' is assigned a value but never used.",["165"],["166"],"React Hook useEffect has missing dependencies: 'customers' and 'nameCustomer'. Either include them or remove the dependency array.",["170"],["171"],["172"],"React Hook useEffect has a missing dependency: 'calcTot'. Either include it or remove the dependency array.",["173"],"'Title' is defined but never used.",["174"],"'setThemeColor' is assigned a value but never used.","'useState' is defined but never used.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"176","fix":"184"},{"desc":"176","fix":"185"},{"desc":"186","fix":"187"},{"desc":"176","fix":"188"},{"desc":"176","fix":"189"},"Update the dependencies array to be: [history, user.id]",{"range":"190","text":"191"},"Update the dependencies array to be: [currentCustomer, customers, name]",{"range":"192","text":"193"},"Update the dependencies array to be: [currentCustomer, customerTransactions, transactions]",{"range":"194","text":"195"},"Update the dependencies array to be: [customers, nameCustomer]",{"range":"196","text":"197"},{"range":"198","text":"191"},{"range":"199","text":"191"},"Update the dependencies array to be: [calcTot, transactions]",{"range":"200","text":"201"},{"range":"202","text":"191"},{"range":"203","text":"191"},[674,676],"[history, user.id]",[1119,1121],"[currentCustomer, customers, name]",[1352,1369],"[currentCustomer, customerTransactions, transactions]",[925,927],"[customers, nameCustomer]",[484,486],[540,542],[794,808],"[calcTot, transactions]",[583,585],[552,554]]