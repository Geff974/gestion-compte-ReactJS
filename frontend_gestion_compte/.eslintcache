[{"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/index.js":"1","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/App.js":"2","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CustomersService.js":"3","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/Home.js":"4","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/BottomMenu.js":"5","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/Transactions.js":"6","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/Customers.js":"7","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/NotFound.js":"8","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/detailCustomer.js":"9","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/QuickViewCustomer.js":"10","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/Title.js":"11","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateCustomer.js":"12","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateTransaction.js":"13"},{"size":261,"mtime":1616275801997,"results":"14","hashOfConfig":"15"},{"size":135,"mtime":1616275462230,"results":"16","hashOfConfig":"15"},{"size":2325,"mtime":1616617588676,"results":"17","hashOfConfig":"15"},{"size":722,"mtime":1616336319956,"results":"18","hashOfConfig":"15"},{"size":879,"mtime":1616275462230,"results":"19","hashOfConfig":"15"},{"size":3125,"mtime":1616360692654,"results":"20","hashOfConfig":"15"},{"size":2832,"mtime":1616616471429,"results":"21","hashOfConfig":"15"},{"size":199,"mtime":1615132683731,"results":"22","hashOfConfig":"15"},{"size":3081,"mtime":1616619650932,"results":"23","hashOfConfig":"15"},{"size":563,"mtime":1616338023998,"results":"24","hashOfConfig":"15"},{"size":206,"mtime":1615132683715,"results":"25","hashOfConfig":"15"},{"size":1905,"mtime":1616336319956,"results":"26","hashOfConfig":"15"},{"size":4140,"mtime":1617310017777,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1io7ldn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/index.js",[],["57","58"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/App.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CustomersService.js",["59"],"import React, { Component } from 'react'\nimport '../App.css';\nimport '../styles/Home.css';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NotFound from '../pages/NotFound';\nimport Customers from './Customers';\nimport Transactions from './Transactions';\nimport DetailCustomer from './detailCustomer';\nimport BottomMenu from './BottomMenu';\n\n\nexport class CustomersService extends Component {\n\n    constructor(props) {\n        let _isMounted = false;\n        super(props)\n\n        this.state = {\n            customers: []\n        }\n        this.updateCustomers = this.updateCustomers.bind(this);\n    }\n\n    updateCustomers = () => {\n        fetch(process.env.REACT_APP_API_URL + '/customers').then((response) => {\n            return response.json();\n        }).then((response) => {\n            this.setState({ customers: response });\n        })\n    }\n\n\n    componentDidMount() {\n        fetch(process.env.REACT_APP_API_URL + '/customers').then((response) => {\n            return response.json();\n        }).then((response) => {\n            this.setState({ customers: response })\n        })\n        this._isMounted=true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted=false;\n    }\n\n\n    render() {\n        return (\n            <div className=\"App container-fluid\">\n                <Router>\n                    <div className='bottomMenu'>\n                        {/* <Sidebar /> */}\n                        <BottomMenu />\n                    </div>\n                    <div className='mainContent'>\n                        <Switch>\n                            <Route path='/' exact component={() => <Home customers={this.state.customers} />} />\n                            <Route path='/customers/:name' component={DetailCustomer} />\n                            <Route path='/customers' component={() => <Customers customers={this.state.customers} updateCustomers={this.updateCustomers} />} />\n                            <Route path='/transactions' component={() => <Transactions updateCustomers={this.updateCustomers} />} />\n                            <Route path='*' component={NotFound} />\n                        </Switch>\n                    </div>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default CustomersService\n\n","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/Home.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/BottomMenu.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/Transactions.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/Customers.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/NotFound.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/detailCustomer.js",["60"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/detailCustomer.css';\nimport CreateTransaction from './CreateTransaction';\n\nconst DetailCustomer = () => {\n\n    const { name } = useParams();\n    const [update, setUpdate] = useState(0)\n    const [currentCustomer, setCustomer] = useState('');\n    const [transactions, setTransactions] = useState([]);\n    const [colorText, setColorText] = useState('');\n\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API_URL + `/customers/${name}`).then((response) => {\n            return response.json();\n        }).then((response) => {\n            setCustomer(response[0]);\n            balanceSign(response[0]);\n            fetch(process.env.REACT_APP_API_URL + `/transactions/${response[0].id}`).then((response) => {\n                return response.json();\n            }).then((response) => {\n                setTransactions(response);\n            })\n        })\n    }, [name, update])\n\n    const balanceSign = (customer) => {\n        const balance = customer.facture + customer.paiement;\n        console.log(balance);\n        if (balance < 0) {\n            setColorText('negative');\n        } else {\n            setColorText('positive');\n        }\n    }\n\n\n    return (\n        <div>\n            {currentCustomer !== undefined &&\n                <div>\n                    <h2 className=\"customerTitle\">{(currentCustomer) ? currentCustomer.name : <p>Chargement...</p>}</h2>\n                    <h3 className={`balance ${colorText}`}>Balance : {currentCustomer.facture + currentCustomer.paiement},00 â‚¬</h3>\n                </div>\n            }\n            {currentCustomer === undefined &&\n                <p><span>{name}</span> n'est pas un client connu</p>\n            }\n            {transactions !== undefined &&\n                <div className=\"container\">\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>designation</th>\n                                <th>Montant</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {transactions.map((transaction, k) => {\n                                return (\n                                    <tr key={k}>\n                                        <td> {transaction.date} </td>\n                                        <td> {transaction.designation} </td>\n                                        <td> {transaction.amount},00 â‚¬ </td>\n                                        <td><button className=\"btn btn-danger\">Effacer</button></td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            }\n            <CreateTransaction customer={name} />\n        </div>\n    );\n}\n\nexport default DetailCustomer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/QuickViewCustomer.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/Title.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateCustomer.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateTransaction.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":13,"nodeType":"67","messageId":"68","endLine":16,"endColumn":23},{"ruleId":"65","severity":1,"message":"69","line":9,"column":20,"nodeType":"67","messageId":"68","endLine":9,"endColumn":29},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'_isMounted' is assigned a value but never used.","Identifier","unusedVar","'setUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]