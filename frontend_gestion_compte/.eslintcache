[{"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/index.js":"1","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/store.js":"2","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/App.js":"3","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Customers.jsx":"4","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Transactions.jsx":"5","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/reducerUser.js":"6","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/actionUser.js":"7","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/actionTransaction.js":"8","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/reducerCustomer.js":"9","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/reducerTransaction.js":"10","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/NotFound.js":"11","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/actionCustomer.js":"12","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/detailCustomer.js":"13","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Account.jsx":"14","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/MbHome.jsx":"15","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CustomerInfo.jsx":"16","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Auth.jsx":"17","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/type.js":"18","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/type.js":"19","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/type.js":"20","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/EditTransaction.jsx":"21","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonHeader.jsx":"22","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateTransaction.jsx":"23","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseTransaction.jsx":"24","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateCustomer.jsx":"25","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseCustomer.jsx":"26"},{"size":396,"mtime":1619303227034,"results":"27","hashOfConfig":"28"},{"size":423,"mtime":1619037643897,"results":"29","hashOfConfig":"28"},{"size":3464,"mtime":1620421784675,"results":"30","hashOfConfig":"28"},{"size":2735,"mtime":1621199916539,"results":"31","hashOfConfig":"28"},{"size":4005,"mtime":1621197721079,"results":"32","hashOfConfig":"28"},{"size":786,"mtime":1619303227030,"results":"33","hashOfConfig":"28"},{"size":421,"mtime":1618866126229,"results":"34","hashOfConfig":"28"},{"size":620,"mtime":1621090029611,"results":"35","hashOfConfig":"28"},{"size":1293,"mtime":1621198484509,"results":"36","hashOfConfig":"28"},{"size":1695,"mtime":1621113472503,"results":"37","hashOfConfig":"28"},{"size":180,"mtime":1619303227034,"results":"38","hashOfConfig":"28"},{"size":843,"mtime":1621198031110,"results":"39","hashOfConfig":"28"},{"size":3564,"mtime":1620917308091,"results":"40","hashOfConfig":"28"},{"size":167,"mtime":1619303227034,"results":"41","hashOfConfig":"28"},{"size":4190,"mtime":1620585530116,"results":"42","hashOfConfig":"28"},{"size":964,"mtime":1620421784675,"results":"43","hashOfConfig":"28"},{"size":7896,"mtime":1621158933984,"results":"44","hashOfConfig":"28"},{"size":117,"mtime":1618866126229,"results":"45","hashOfConfig":"28"},{"size":215,"mtime":1619303227030,"results":"46","hashOfConfig":"28"},{"size":191,"mtime":1619303227030,"results":"47","hashOfConfig":"28"},{"size":4857,"mtime":1620938691862,"results":"48","hashOfConfig":"28"},{"size":303,"mtime":1620585530112,"results":"49","hashOfConfig":"28"},{"size":5567,"mtime":1621112720065,"results":"50","hashOfConfig":"28"},{"size":1072,"mtime":1621197921399,"results":"51","hashOfConfig":"28"},{"size":2549,"mtime":1621180663680,"results":"52","hashOfConfig":"28"},{"size":725,"mtime":1621199988363,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1io7ldn",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/index.js",[],["112","113"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/store.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/App.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Customers.jsx",["114","115"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Transactions.jsx",["116"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/reducerUser.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/actionUser.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/actionTransaction.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/reducerCustomer.js",["117"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/reducerTransaction.js",["118"],"import { TRANSACTION_ADD, TRANSACTION_REINIT, TRANSACTION_UPDATE, TRANSACTION_ERASE } from './type';\n\nconst initialState = {\n    transactions: []\n}\n\nconst transactionReducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case TRANSACTION_ADD:\n            const transactionsAfterAdd = [action.transaction, ...state.transactions];\n            transactionsAfterAdd.sort((a, b) => {\n                if(a.date < b.date) {\n                    return 1;\n                }\n                if(a.date > b.date) {\n                    return -1;\n                }\n            })\n            return {\n                ...state,\n                transactions: transactionsAfterAdd\n            }\n        case TRANSACTION_REINIT:\n            return {\n                transactions: initialState.transactions\n            }\n        case TRANSACTION_UPDATE:\n            const indexOfTransaction = state.transactions.findIndex(trans => trans.id === action.transaction.id);\n            const newTransactions = state.transactions;\n            newTransactions[indexOfTransaction] = action.transaction;\n            return {\n                ...state,\n                transactions: newTransactions\n            }\n        case TRANSACTION_ERASE:\n            const indexOfTransactionDelete = state.transactions.findIndex(trans => trans.id === action.id_transaction)\n            const transactionsAfterDelete = state.transactions;\n            transactionsAfterDelete.splice(indexOfTransactionDelete, 1)\n            return {\n                ...state,\n                transactions: transactionsAfterDelete\n            }\n        default:\n            return state;\n    }\n}\n\nexport default transactionReducer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/NotFound.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/actionCustomer.js",["119","120"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/detailCustomer.js",["121","122","123","124"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/detailCustomer.css';\r\nimport CreateTransaction from './CreateTransaction.jsx';\r\n\r\nconst DetailCustomer = () => {\r\n    \r\n    const customers = useSelector(state => state.customers.customers)\r\n    const transactions = useSelector(state => state.transactions.transactions)\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const { name } = useParams();\r\n    const [currentCustomer, setCurrentCustomer] = useState('');\r\n    const [customerTransactions, setCustomerTransactions] = useState([]);\r\n    const [colorText, setColorText] = useState('');\r\n\r\n    useEffect(() => {\r\n        const indexOfCustomer = customers.findIndex(cust => cust.name === name);\r\n        setCurrentCustomer(customers[indexOfCustomer]);\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        balanceSign(currentCustomer);\r\n        const transactionList = []\r\n        transactions.map(trans => {\r\n            if(trans.name === currentCustomer.name) {\r\n                transactionList.push(trans);\r\n            }\r\n        });\r\n        setCustomerTransactions(transactionList);\r\n    }, [currentCustomer]);\r\n\r\n    const balanceSign = (customer) => {\r\n        const balance = customer.facture + customer.paiement;\r\n        if (balance < 0) {\r\n            setColorText('negative');\r\n        } else {\r\n            setColorText('positive');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {currentCustomer !== undefined &&\r\n                <div>\r\n                    <h2 className=\"customerTitle\">{(currentCustomer) ? currentCustomer.name : <p>Chargement...</p>}</h2>\r\n                    <h3 className={`balance ${colorText}`}>Balance : {currentCustomer.facture + currentCustomer.paiement},00 €</h3>\r\n                </div>\r\n            }\r\n            {currentCustomer === undefined &&\r\n                <p><span>{name}</span> n'est pas un client connu</p>\r\n            }\r\n            {customerTransactions !== undefined &&\r\n                <div className=\"container\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>designation</th>\r\n                                <th>Montant</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {customerTransactions.map((transaction, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td> {transaction.date} </td>\r\n                                        <td> {transaction.designation} </td>\r\n                                        <td> {transaction.amount},00 € </td>\r\n                                        <td><button className=\"btn btn-danger\">Effacer</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n            <CreateTransaction nameCustomer={name} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailCustomer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Account.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/MbHome.jsx",["125","126","127"],"import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { MdArrowDownward, MdArrowUpward } from 'react-icons/md';\nimport { useHistory } from 'react-router';\nimport '../styles/MbHome.css';\n\nconst MbHome = () => {\n\n    const customers = useSelector(state => state.customers.customers);\n    const user = useSelector(state => state.user.info);\n    let history = useHistory();\n    useEffect(() => {\n        if (user.id === null) {\n            history.push('/login');\n        }\n    }, [])\n\n    const transactions = useSelector(state => state.transactions.transactions);\n    const [totFactures, setTotFactures] = useState(0);\n    const [totPaiements, setTotPaiements] = useState(0);\n\n    useEffect(() => {\n        calcTot();\n    }, [transactions])\n\n    const calcTot = () => {\n        setTotPaiements(0);\n        setTotFactures(0);\n        transactions.forEach(transaction => {\n            transaction.amount > 0 ? setTotFactures(prevState => prevState + transaction.amount) : setTotPaiements(prevState => prevState - transaction.amount);\n        });\n    }\n\n    const calcBalance = (customer) => {\n        return (customer.facture + customer.paiement)\n    }\n\n    const showCustomer = (customer) => {\n        history.push('/customers/' + customer.name);\n    }\n    const provTest = () => {\n        history.push('/test');\n    }\n\n    const dateSlice = (str) => {\n        const strSplit = str.split('-');\n        const strFinal = strSplit[2] + '/' + strSplit[1];\n        return strFinal;\n    }\n\n\n    return (\n        <div className=\"mbHome\">\n            <header className='header-MbHome'>\n                <div>\n                    <h3>Bienvenue</h3>\n                    <h1>Geffrey SAID</h1>\n                </div>\n                <div className=\"profilImg\">\n                </div>\n            </header>\n            <div>\n                {customers !== null &&\n                    <div className='card-list'>\n                        {\n                            customers.map(((customer, k) => {\n                                return (\n                                    <div key={k} className=\"customer-card\" onClick={() => showCustomer(customer)}>\n                                        <h4>{customer.name} <span>VISA</span></h4>\n                                        <p>{calcBalance(customer)},00 €</p>\n                                    </div>\n                                )\n                            }))\n                        }\n                    </div>\n                }\n            </div>\n\n            <div className=\"transaction-mobile\">\n                <div className=\"recap\">\n                    <div className=\"recap-card\">\n                        <p className='recap-arrow arrow-up'> <MdArrowUpward size={25} /> </p>\n                        <p> Factures <br /> <span>{totFactures},00 €</span> </p>\n                    </div>\n                    <div className=\"recap-card\">\n                        <p className='recap-arrow arrow-down'> <MdArrowDownward size={25} /> </p>\n                        <p> Paiements <br /> <span>{totPaiements},00 €</span> </p>\n                    </div>\n                </div>\n\n                {transactions !== null &&\n                    <div className=\"transaction-list\">\n                        {transactions.map((transaction, k) => {\n                            return (\n                                <div key={k} onClick={() => showCustomer(transaction)} className=\"transaction-line\">\n                                    {transaction.amount > 0 ? <p className=\"arrow-line arrow-up\"> <MdArrowUpward size={25} /> </p> : <p className=\"arrow-line arrow-down\"> <MdArrowDownward size={25} /> </p>}\n                                    <p className='trans-detail'> <span className=\"trans-name\">{transaction.name}</span> <span className=\"trans-date\">{dateSlice(transaction.date)}</span></p>\n                                    <p className=\"trans-amount\">{transaction.amount},00 €</p>\n                                </div>\n                            )\n                        })}\n                    </div>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default MbHome;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CustomerInfo.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Auth.jsx",["128"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/EditTransaction.jsx",["129"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FcCalendar, FcContacts, FcCurrencyExchange, FcSms } from 'react-icons/fc';\nimport '../styles/EditTransaction.css';\nimport axios from 'axios';\nimport { transactionUpdate } from '../Redux/Transaction/actionTransaction';\nimport { customerUpdate } from '../Redux/Customer/actionCustomer';\n\nconst EditTransaction = React.forwardRef((props, ref) => {\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(state => state.user.info);\n    const customers = useSelector(state => state.customers.customers);\n    const sizeOfIcon = 35;\n\n    const [transactionEdit, setTransactionEdit] = useState({\n        id: props.transaction.id,\n        date: props.transaction.date,\n        name: props.transaction.name,\n        designation: props.transaction.designation,\n        amount: props.transaction.amount,\n        id_user: user.id\n    })\n\n    useEffect(() => {\n        if (customers) {\n            const customerSelected = customers.find(cust => cust.name === props.transaction.name);\n            if (customerSelected) {\n                setTransactionEdit({ ...props.transaction, name: customerSelected.id, id_user: user.id });\n                ref.current.className = \"edit-transaction open\";\n            }\n        }\n    }, [props.transaction])\n\n    const handleChange = e => {\n        setTransactionEdit({ ...transactionEdit, [e.target.name]: e.target.value });\n    }\n\n    const handleBlurCurrency = e => {\n        e.target.value += '.00 €';\n    }\n\n    const handleFocusCurrency = e => {\n        // Check if decimal\n        const decimalTarget = e.target.value.substring(e.target.value.length - 4, e.target.value.length - 2);\n\n        if (decimalTarget !== \"00\") {\n            e.target.value = e.target.value.substring(0, e.target.value.length - 3);\n        } else {\n            e.target.value = e.target.value.substring(0, e.target.value.length - 5);\n        }\n\n    }\n\n    const closeModal = e => {\n        if (e) {\n            e.preventDefault();\n        }\n        ref.current.className = \"edit-transaction\";\n    }\n\n    const sendEdit = e => {\n        e.preventDefault();\n        const customerSelected = customers.find(cust => cust.id === transactionEdit.name);\n        let transactionToDispatch = {};\n        axios.put(process.env.REACT_APP_API_URL + '/transactions', transactionEdit)\n            .then(result => {\n                transactionToDispatch = result.data[0];\n                transactionToDispatch = { ...transactionToDispatch, name: customerSelected.name }\n                dispatch(transactionUpdate(transactionToDispatch));\n                dispatch(customerUpdate(customerSelected.name));\n            })\n            .catch(err => alert(err));\n        closeModal();\n    }\n\n    return (\n        <div ref={ref} className=\"edit-transaction\">\n            <form>\n                <div className=\"input-edit-transaction\">\n                    <i> <FcCalendar size={sizeOfIcon} /> </i>\n                    <input type=\"date\" placeholder={transactionEdit.date} value={transactionEdit.date} name='date' onChange={handleChange} />\n                </div>\n                {customers &&\n                    <div className=\"input-edit-transaction\">\n                        <i> <FcContacts size={sizeOfIcon} /> </i>\n                        <select name=\"name\" value={transactionEdit.name} onChange={handleChange}>\n                            {customers.map((customer, k) => {\n                                return (\n                                    <option key={k} value={customer.id}> {customer.name} </option>\n                                )\n                            })}\n                        </select>\n                    </div>\n                }\n                <div className=\"input-edit-transaction\">\n                    <i> <FcSms size={sizeOfIcon} /> </i>\n                    <input type=\"text\" placeholder={transactionEdit.designation} value={transactionEdit.designation} name='designation' onChange={handleChange} />\n                </div>\n                <div className=\"input-edit-transaction\">\n                    <i> <FcCurrencyExchange size={sizeOfIcon} /> </i>\n                    <input type=\"text\" className=\"input-edit-transaction-money\" placeholder={transactionEdit.amount} value={transactionEdit.amount} name='amount' onBlur={handleBlurCurrency} onFocus={handleFocusCurrency} onChange={handleChange} />\n                </div>\n\n                <div className=\"input-edit-transaction\">\n                    <button type=\"submit\" className=\"btn-edit btn-valider\" onClick={sendEdit}>Modifier</button>\n                    <button type=\"submit\" className=\"btn-edit btn-cancel\" onClick={closeModal}>Annuler</button>\n                </div>\n            </form>\n        </div>\n    );\n})\n\nexport default EditTransaction;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonHeader.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateTransaction.jsx",["130","131","132","133"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\r\nimport axios from 'axios';\r\nimport '../styles/CreateTransaction.css';\r\nimport { customerUpdate } from '../Redux/Customer/actionCustomer';\r\nimport { MdEuroSymbol } from 'react-icons/md';\r\n\r\nconst CreateTransaction = React.forwardRef((props, ref) => {\r\n\r\n    const refCreateTransaction = useRef(ref)\r\n    const customers = useSelector(state => state.customers.customers);\r\n    const user = useSelector(state => state.user.info);\r\n    const transactions = useSelector(state => state.transactions.transactions)\r\n    const dispatch = useDispatch();\r\n    const [currentCustomer, setCurrentCustomer] = useState({ name: '' });\r\n\r\n    const [transactionToAdd, setTransactionToAdd] = useState({\r\n        date: '',\r\n        customer: '',\r\n        designation: '',\r\n        amount: 0,\r\n        id_user: user.id\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.nameCustomer) {\r\n            const indexOfCustomer = customers.findIndex(cust => cust.name === props.nameCustomer);\r\n            setCurrentCustomer(customers[indexOfCustomer]);\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const changeHandler = e => {\r\n        if (e.target.name === 'date') {\r\n            setTransactionToAdd({ ...transactionToAdd, date: e.target.value.toLocaleString() });\r\n        } else {\r\n            setTransactionToAdd({ ...transactionToAdd, [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        let transactionSend = {};\r\n        if (!props.nameCustomer) {\r\n            transactionSend = transactionToAdd;\r\n        } else {\r\n            transactionSend = { ...transactionToAdd, customer: currentCustomer.id }\r\n        }\r\n\r\n        axios.post(process.env.REACT_APP_API_URL + '/transactions', transactionSend)\r\n            .then((res) => {\r\n                console.log(res);\r\n                dispatch(transactionAdd(res.data));\r\n                dispatch(customerUpdate(transactions, res.data.name));\r\n                setTransactionToAdd({\r\n                    ...transactionToAdd,\r\n                    customer: '',\r\n                    designation: '',\r\n                    amout: 0,\r\n                    id_user: user.id\r\n                });\r\n                props.hideCreateTransaction();\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const test = () => {\r\n        const index = customers.findIndex(cust => cust.id == transactionToAdd.customer);\r\n        dispatch(customerUpdate(transactions, customers[index].name));\r\n    }\r\n\r\n    const { date, customer, designation, amount } = transactionToAdd;\r\n\r\n    const disableAdd = date === \"\" || customer === \"\" || amount === null ? true : false;\r\n\r\n    const handlerCancel = () => {\r\n        refCreateTransaction.current.className = 'create-transaction';\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"create-transaction\" ref={ref}>\r\n            <div className=\"container\">\r\n                <div className=\"CT-title\">\r\n                    <h3>Ajouter une transaction</h3>\r\n                </div>\r\n                <form onSubmit={submitHandler}>\r\n                    <div className=\"CT-item designation\">\r\n                        <label htmlFor=\"designation\">Designation</label>\r\n                        <input type=\"text\" name=\"designation\" placeholder=\"Description de la transaction\" value={designation} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"CT-item date\">\r\n                        <label htmlFor=\"date\">Date</label>\r\n                        <input type=\"date\" name=\"date\" value={date} onChange={changeHandler} min=\"2019-01-01\" />\r\n                    </div>\r\n\r\n                    <div className=\"CT-item customer\">\r\n                        <label htmlFor=\"customer\">Client</label>\r\n                        {props.nameCustomer !== undefined &&\r\n                            <input type=\"text\" className=\"form-control\" name=\"customer\" value={currentCustomer.name} disabled />\r\n                        }\r\n\r\n                        {props.nameCustomer === undefined &&\r\n                            <select className=\"form-select\" name=\"customer\" value={customer} onChange={changeHandler}>\r\n                                <option value=''></option>\r\n                                {customers.map((customer, k) => {\r\n                                    return (\r\n                                        <option key={k} value={customer.id}>{customer.name}</option>\r\n                                    )\r\n                                })}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"CT-item amount\">\r\n                        <label htmlFor=\"amount\">Montant</label>\r\n                        <div className=\"CT-amount-input\">\r\n                            <MdEuroSymbol className=\"euro\" />\r\n                            <input type=\"number\" name=\"amount\" placeholder='0' value={amount} onChange={changeHandler} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"CT-btn btn-add\" disabled={disableAdd}>Ajouter</button>\r\n                    <button type=\"button\" className=\"CT-btn btn-cancel\" onClick={props.hideCreateTransaction}>Annuler</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n})\r\n\r\nexport default CreateTransaction;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseTransaction.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateCustomer.jsx",["134"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseCustomer.jsx",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":20,"column":8,"nodeType":"141","endLine":20,"endColumn":10,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":31,"column":11,"nodeType":"145","messageId":"146","endLine":31,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":22,"column":8,"nodeType":"141","endLine":22,"endColumn":10,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":15,"column":79,"nodeType":"150","messageId":"151","endLine":15,"endColumn":81},{"ruleId":"152","severity":1,"message":"153","line":11,"column":46,"nodeType":"154","messageId":"155","endLine":11,"endColumn":48},{"ruleId":"152","severity":1,"message":"156","line":13,"column":28,"nodeType":"154","messageId":"157","endLine":13,"endColumn":30},{"ruleId":"148","severity":1,"message":"149","line":14,"column":24,"nodeType":"150","messageId":"151","endLine":14,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":18,"column":8,"nodeType":"141","endLine":18,"endColumn":10,"suggestions":"158"},{"ruleId":"139","severity":1,"message":"159","line":28,"column":8,"nodeType":"141","endLine":28,"endColumn":10,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"156","line":33,"column":32,"nodeType":"154","messageId":"157","endLine":33,"endColumn":34},{"ruleId":"139","severity":1,"message":"161","line":39,"column":8,"nodeType":"141","endLine":39,"endColumn":25,"suggestions":"162"},{"ruleId":"139","severity":1,"message":"140","line":16,"column":8,"nodeType":"141","endLine":16,"endColumn":10,"suggestions":"163"},{"ruleId":"139","severity":1,"message":"164","line":24,"column":8,"nodeType":"141","endLine":24,"endColumn":22,"suggestions":"165"},{"ruleId":"143","severity":1,"message":"166","line":41,"column":11,"nodeType":"145","messageId":"146","endLine":41,"endColumn":19},{"ruleId":"143","severity":1,"message":"167","line":41,"column":24,"nodeType":"145","messageId":"146","endLine":41,"endColumn":37},{"ruleId":"139","severity":1,"message":"168","line":35,"column":8,"nodeType":"141","endLine":35,"endColumn":27,"suggestions":"169"},{"ruleId":"139","severity":1,"message":"170","line":31,"column":8,"nodeType":"141","endLine":31,"endColumn":10,"suggestions":"171"},{"ruleId":"143","severity":1,"message":"172","line":69,"column":11,"nodeType":"145","messageId":"146","endLine":69,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":70,"column":59,"nodeType":"150","messageId":"151","endLine":70,"endColumn":61},{"ruleId":"143","severity":1,"message":"173","line":78,"column":11,"nodeType":"145","messageId":"146","endLine":78,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":17,"column":8,"nodeType":"141","endLine":17,"endColumn":10,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["177"],"no-unused-vars","'balanceSign' is assigned a value but never used.","Identifier","unusedVar",["178"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside",["179"],"React Hook useEffect has missing dependencies: 'customers' and 'name'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has a missing dependency: 'transactions'. Either include it or remove the dependency array.",["181"],["182"],"React Hook useEffect has a missing dependency: 'calcTot'. Either include it or remove the dependency array.",["183"],"'provTest' is assigned a value but never used.","'setThemeColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customers', 'ref', and 'user.id'. Either include them or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'customers' and 'props.nameCustomer'. Either include them or remove the dependency array.",["185"],"'test' is assigned a value but never used.","'handlerCancel' is assigned a value but never used.",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},{"desc":"187","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"187","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"187","fix":"202"},"Update the dependencies array to be: [history, user.id]",{"range":"203","text":"204"},{"range":"205","text":"204"},{"range":"206","text":"204"},"Update the dependencies array to be: [customers, name]",{"range":"207","text":"208"},"Update the dependencies array to be: [currentCustomer, transactions]",{"range":"209","text":"210"},{"range":"211","text":"204"},"Update the dependencies array to be: [calcTot, transactions]",{"range":"212","text":"213"},"Update the dependencies array to be: [customers, props.transaction, ref, user.id]",{"range":"214","text":"215"},"Update the dependencies array to be: [customers, props.nameCustomer]",{"range":"216","text":"217"},{"range":"218","text":"204"},[715,717],"[history, user.id]",[814,816],[678,680],[1084,1086],"[customers, name]",[1417,1434],"[currentCustomer, transactions]",[525,527],[771,785],"[calcTot, transactions]",[1339,1358],"[customers, props.transaction, ref, user.id]",[1240,1242],"[customers, props.nameCustomer]",[553,555]]