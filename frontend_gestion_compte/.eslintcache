[{"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/index.js":"1","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/store.js":"2","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/App.js":"3","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Customers.jsx":"4","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Transactions.jsx":"5","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/reducerUser.js":"6","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/actionUser.js":"7","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/actionTransaction.js":"8","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/reducerCustomer.js":"9","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/reducerTransaction.js":"10","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/NotFound.js":"11","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/actionCustomer.js":"12","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Account.jsx":"13","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/MbHome.jsx":"14","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CustomerInfo.jsx":"15","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Auth.jsx":"16","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/type.js":"17","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/type.js":"18","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/type.js":"19","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/EditTransaction.jsx":"20","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonHeader.jsx":"21","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateTransaction.jsx":"22","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseTransaction.jsx":"23","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateCustomer.jsx":"24","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseCustomer.jsx":"25","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/TransactionItem.jsx":"26","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/EditAdd.jsx":"27","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/ListTransactions.jsx":"28","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Routes.jsx":"29","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/context/UserContext.jsx":"30","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/DetailCustomer.jsx":"31"},{"size":396,"mtime":1619303227034,"results":"32","hashOfConfig":"33"},{"size":423,"mtime":1619037643897,"results":"34","hashOfConfig":"33"},{"size":3040,"mtime":1623095417073,"results":"35","hashOfConfig":"33"},{"size":2637,"mtime":1623013984136,"results":"36","hashOfConfig":"33"},{"size":3304,"mtime":1623080350562,"results":"37","hashOfConfig":"33"},{"size":786,"mtime":1619303227030,"results":"38","hashOfConfig":"33"},{"size":421,"mtime":1618866126229,"results":"39","hashOfConfig":"33"},{"size":620,"mtime":1621090029611,"results":"40","hashOfConfig":"33"},{"size":1293,"mtime":1621198484509,"results":"41","hashOfConfig":"33"},{"size":1695,"mtime":1621113472503,"results":"42","hashOfConfig":"33"},{"size":180,"mtime":1619303227034,"results":"43","hashOfConfig":"33"},{"size":843,"mtime":1621198031110,"results":"44","hashOfConfig":"33"},{"size":167,"mtime":1619303227034,"results":"45","hashOfConfig":"33"},{"size":4225,"mtime":1623014658757,"results":"46","hashOfConfig":"33"},{"size":2445,"mtime":1623013946626,"results":"47","hashOfConfig":"33"},{"size":8693,"mtime":1623007925637,"results":"48","hashOfConfig":"33"},{"size":117,"mtime":1618866126229,"results":"49","hashOfConfig":"33"},{"size":215,"mtime":1619303227030,"results":"50","hashOfConfig":"33"},{"size":191,"mtime":1619303227030,"results":"51","hashOfConfig":"33"},{"size":5394,"mtime":1623015609641,"results":"52","hashOfConfig":"33"},{"size":303,"mtime":1620585530112,"results":"53","hashOfConfig":"54"},{"size":5561,"mtime":1623014820724,"results":"55","hashOfConfig":"33"},{"size":1451,"mtime":1621626184713,"results":"56","hashOfConfig":"54"},{"size":2568,"mtime":1623014212918,"results":"57","hashOfConfig":"33"},{"size":1162,"mtime":1621626344397,"results":"58","hashOfConfig":"54"},{"size":2977,"mtime":1623013129936,"results":"59","hashOfConfig":"33"},{"size":659,"mtime":1621666483414,"results":"60","hashOfConfig":"33"},{"size":734,"mtime":1622756246252,"results":"61","hashOfConfig":"33"},{"size":2108,"mtime":1623001897040,"results":"62","hashOfConfig":"33"},{"size":557,"mtime":1623005903356,"results":"63","hashOfConfig":"33"},{"size":4720,"mtime":1623001701606,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"z8ca0z",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"1io7ldn",{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"67"},"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/index.js",[],["135","136"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/store.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/App.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Customers.jsx",["137","138"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Transactions.jsx",["139"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/reducerUser.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/actionUser.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/actionTransaction.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/reducerCustomer.js",["140"],"import { CUSTOMER_ADD, CUSTOMER_ERASE, CUSTOMER_REINIT, CUSTOMER_UPDATE } from './type';\n\nconst initialState = {\n    customers: []\n}\n\nconst customerReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case CUSTOMER_ADD:\n            return {\n                ...state,\n                customers: [...state.customers, action.customer]\n            }\n        case CUSTOMER_UPDATE:\n            const indexCustomer = state.customers.findIndex(cust => cust.name == action.customer);\n            if (indexCustomer > -1) {\n                state.customers[indexCustomer].paiement = action.paiement;\n                state.customers[indexCustomer].facture = action.facture;\n            }\n            return state;\n        case CUSTOMER_ERASE:\n            const indexCustomerToErase = state.customers.findIndex(cust => cust.id === action.customer.id);\n            const customersAfterErase = state.customers;\n            customersAfterErase.splice(indexCustomerToErase, 1);\n            return {\n                ...state,\n                customers: customersAfterErase\n            }\n        case CUSTOMER_REINIT:\n            return {\n                customers: initialState.customers\n            }\n        default:\n            return state;\n    }\n}\n\nexport default customerReducer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/reducerTransaction.js",["141"],"import { TRANSACTION_ADD, TRANSACTION_REINIT, TRANSACTION_UPDATE, TRANSACTION_ERASE } from './type';\n\nconst initialState = {\n    transactions: []\n}\n\nconst transactionReducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case TRANSACTION_ADD:\n            const transactionsAfterAdd = [action.transaction, ...state.transactions];\n            transactionsAfterAdd.sort((a, b) => {\n                if(a.date < b.date) {\n                    return 1;\n                }\n                if(a.date > b.date) {\n                    return -1;\n                }\n            })\n            return {\n                ...state,\n                transactions: transactionsAfterAdd\n            }\n        case TRANSACTION_REINIT:\n            return {\n                transactions: initialState.transactions\n            }\n        case TRANSACTION_UPDATE:\n            const indexOfTransaction = state.transactions.findIndex(trans => trans.id === action.transaction.id);\n            const newTransactions = state.transactions;\n            newTransactions[indexOfTransaction] = action.transaction;\n            return {\n                ...state,\n                transactions: newTransactions\n            }\n        case TRANSACTION_ERASE:\n            const indexOfTransactionDelete = state.transactions.findIndex(trans => trans.id === action.id_transaction)\n            const transactionsAfterDelete = state.transactions;\n            transactionsAfterDelete.splice(indexOfTransactionDelete, 1)\n            return {\n                ...state,\n                transactions: transactionsAfterDelete\n            }\n        default:\n            return state;\n    }\n}\n\nexport default transactionReducer;","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/NotFound.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/actionCustomer.js",["142","143"],"import { CUSTOMER_UPDATE, CUSTOMER_ADD, CUSTOMER_REINIT, CUSTOMER_ERASE } from './type';\n\nexport const customerAdd = (customer) => {\n    return {\n        type: CUSTOMER_ADD,\n        customer: customer\n    }\n}\n\nexport const customerUpdate = (transactions, name_customer) => {\n    let paiement = 0;\n    let facture = 0;\n    transactions.map(trans => {\n        if (trans.name == name_customer) {\n            trans.amount > 0 ? facture += trans.amount : paiement+= trans.amount;\n        }\n    })\n    return {\n        type: CUSTOMER_UPDATE,\n        customer: name_customer,\n        paiement: paiement,\n        facture: facture\n    }\n}\n\nexport const customerErase = (customer) => {\n    return {\n        type: CUSTOMER_ERASE,\n        customer: customer\n    }\n}\n\nexport const customerReinit = () => {\n    return {\n        type: CUSTOMER_REINIT\n    }\n}","/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Account.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/MbHome.jsx",["144","145"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CustomerInfo.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/pages/Auth.jsx",["146"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/User/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Transaction/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Redux/Customer/type.js",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/EditTransaction.jsx",["147","148"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonHeader.jsx",[],["149","150"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateTransaction.jsx",["151","152","153"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseTransaction.jsx",[],["154","155"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/CreateCustomer.jsx",["156","157"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/ButtonEraseCustomer.jsx",[],["158","159"],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/TransactionItem.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/smallComponents/EditAdd.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/ListTransactions.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/Routes.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/context/UserContext.jsx",[],"/home/geffreydev/programation/react/Gestion-compte-reactjs/frontend_gestion_compte/src/components/DetailCustomer.jsx",["160","161","162","163"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/detailCustomer.css';\r\nimport CreateTransaction from './CreateTransaction.jsx';\r\nimport { ReactComponent as HeaderImg } from '../styles/img/header-detail-customer.svg';\r\nimport ListTransactions from './ListTransactions';\r\nimport EditTransaction from './EditTransaction';\r\nimport EditAdd from './smallComponents/EditAdd';\r\nimport { AiOutlineLeftCircle } from 'react-icons/ai';\r\n\r\nconst DetailCustomer = () => {\r\n\r\n    const customers = useSelector(state => state.customers.customers)\r\n    const transactions = useSelector(state => state.transactions.transactions)\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const { name } = useParams();\r\n    const [currentCustomer, setCurrentCustomer] = useState('');\r\n    const [customerTransactions, setCustomerTransactions] = useState([]);\r\n    const [colorText, setColorText] = useState('');\r\n\r\n    // edit and create transaction\r\n    const refEditTransaction = useRef(null);\r\n    const refCreateTransaction = useRef(null);\r\n    const tableTransaction = useRef(null);\r\n    const [transactionToEdit, settransactionToEdit] = useState({ id: 0, date: \"2017-03-11\", name: 0, designation: 'Aucune', amount: 0 })\r\n    const [addActive, setAddActive] = useState(false)\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const indexOfCustomer = customers.findIndex(cust => cust.name === name);\r\n        setCurrentCustomer(customers[indexOfCustomer]);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        balanceSign(currentCustomer);\r\n        const transactionList = []\r\n        transactions.map(trans => {\r\n            if (trans.name === currentCustomer.name) {\r\n                transactionList.push(trans);\r\n            }\r\n        });\r\n        setCustomerTransactions(transactionList);\r\n    }, [currentCustomer]);\r\n\r\n    const balanceSign = (customer) => {\r\n        const balance = customer.facture + customer.paiement;\r\n        if (balance < 0) {\r\n            setColorText('negative');\r\n        } else {\r\n            setColorText('positive');\r\n        }\r\n    }\r\n\r\n    const editTransaction = (transaction) => {\r\n        settransactionToEdit(transaction);\r\n        refEditTransaction.current.className = \"edit-transaction open\";\r\n    }\r\n\r\n    const switchEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const showCreateTransaction = () => {\r\n        refCreateTransaction.current.className = 'create-transaction show';\r\n        tableTransaction.current.className = 'transactions-list put-down';\r\n        setAddActive(true);\r\n    }\r\n\r\n    const hideCreateTransaction = () => {\r\n        refCreateTransaction.current.className = 'create-transaction';\r\n        tableTransaction.current.className = 'transactions-list';\r\n        setAddActive(false);\r\n    }\r\n\r\n    const goToHome = () => {\r\n        history.push('/');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"customer-detail-component\">\r\n            <div className=\"header-customer-detail\">\r\n                <HeaderImg className=\"header-img\" />\r\n            </div>\r\n            {currentCustomer !== undefined &&\r\n                <div className=\"header-customer-detail\">\r\n                    <h1 className=\"title-component\"> <AiOutlineLeftCircle size={30} className=\"header-backward\" onClick={goToHome} /> {(currentCustomer) ? currentCustomer.name : <p>Chargement...</p>}</h1>\r\n                    <h3 className={`balance ${colorText}`}>Balance : {currentCustomer.facture + currentCustomer.paiement},00 €</h3>\r\n                </div>\r\n            }\r\n            <div>\r\n                <EditAdd add={showCreateTransaction} edit={switchEdit} editActive={edit} addActive={addActive} />\r\n                <CreateTransaction ref={refCreateTransaction} hideCreateTransaction={hideCreateTransaction} />\r\n            </div>\r\n            {currentCustomer === undefined &&\r\n                <p><span>{name}</span> n'est pas un client connu</p>\r\n            }\r\n            {customerTransactions !== undefined &&\r\n                <div className=\"transactions-list\" ref={tableTransaction}>\r\n                    <h4>Transactions</h4>\r\n                    <ListTransactions transactions={customerTransactions} edit={edit} doubleClick={editTransaction} />\r\n                </div>\r\n            }\r\n            <EditTransaction transaction={transactionToEdit} ref={refEditTransaction} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailCustomer;",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"172","line":18,"column":11,"nodeType":"170","messageId":"171","endLine":18,"endColumn":20},{"ruleId":"168","severity":1,"message":"173","line":27,"column":11,"nodeType":"170","messageId":"171","endLine":27,"endColumn":23},{"ruleId":"174","severity":1,"message":"175","line":15,"column":79,"nodeType":"176","messageId":"177","endLine":15,"endColumn":81},{"ruleId":"178","severity":1,"message":"179","line":11,"column":46,"nodeType":"180","messageId":"181","endLine":11,"endColumn":48},{"ruleId":"178","severity":1,"message":"182","line":13,"column":28,"nodeType":"180","messageId":"183","endLine":13,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":14,"column":24,"nodeType":"176","messageId":"177","endLine":14,"endColumn":26},{"ruleId":"168","severity":1,"message":"172","line":22,"column":11,"nodeType":"170","messageId":"171","endLine":22,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":32,"column":8,"nodeType":"186","endLine":32,"endColumn":22,"suggestions":"187"},{"ruleId":"168","severity":1,"message":"188","line":43,"column":24,"nodeType":"170","messageId":"171","endLine":43,"endColumn":37},{"ruleId":"184","severity":1,"message":"189","line":37,"column":8,"nodeType":"186","endLine":37,"endColumn":27,"suggestions":"190"},{"ruleId":"174","severity":1,"message":"175","line":68,"column":65,"nodeType":"176","messageId":"177","endLine":68,"endColumn":67},{"ruleId":"164","replacedBy":"191"},{"ruleId":"166","replacedBy":"192"},{"ruleId":"168","severity":1,"message":"193","line":1,"column":38,"nodeType":"170","messageId":"171","endLine":1,"endColumn":44},{"ruleId":"168","severity":1,"message":"194","line":17,"column":29,"nodeType":"170","messageId":"171","endLine":17,"endColumn":47},{"ruleId":"184","severity":1,"message":"195","line":38,"column":8,"nodeType":"186","endLine":38,"endColumn":10,"suggestions":"196"},{"ruleId":"164","replacedBy":"197"},{"ruleId":"166","replacedBy":"198"},{"ruleId":"168","severity":1,"message":"169","line":2,"column":27,"nodeType":"170","messageId":"171","endLine":2,"endColumn":36},{"ruleId":"168","severity":1,"message":"199","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":20},{"ruleId":"164","replacedBy":"200"},{"ruleId":"166","replacedBy":"201"},{"ruleId":"184","severity":1,"message":"202","line":23,"column":8,"nodeType":"186","endLine":23,"endColumn":10,"suggestions":"203"},{"ruleId":"184","severity":1,"message":"204","line":41,"column":8,"nodeType":"186","endLine":41,"endColumn":10,"suggestions":"205"},{"ruleId":"178","severity":1,"message":"182","line":46,"column":32,"nodeType":"180","messageId":"183","endLine":46,"endColumn":34},{"ruleId":"184","severity":1,"message":"206","line":52,"column":8,"nodeType":"186","endLine":52,"endColumn":25,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'customers' is assigned a value but never used.","'transactions' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calcTot'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'setThemeColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customers', 'ref', and 'user.id'. Either include them or remove the dependency array.",["211"],["208"],["209"],"'useRef' is defined but never used.","'setCurrentCustomer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.customer' and 'transactionToAdd'. Either include them or remove the dependency array. You can also do a functional update 'setTransactionToAdd(t => ...)' if you only need 'transactionToAdd' in the 'setTransactionToAdd' call.",["212"],["208"],["209"],"'useHistory' is defined but never used.",["208"],["209"],"React Hook useEffect has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.",["213"],"React Hook useEffect has missing dependencies: 'customers' and 'name'. Either include them or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'transactions'. Either include it or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [calcTot, transactions]",{"range":"228","text":"229"},"Update the dependencies array to be: [customers, props.transaction, ref, user.id]",{"range":"230","text":"231"},"Update the dependencies array to be: [props.customer, transactionToAdd]",{"range":"232","text":"233"},"Update the dependencies array to be: [history, user.id]",{"range":"234","text":"235"},"Update the dependencies array to be: [customers, name]",{"range":"236","text":"237"},"Update the dependencies array to be: [currentCustomer, transactions]",{"range":"238","text":"239"},[1203,1217],"[calcTot, transactions]",[1465,1484],"[customers, props.transaction, ref, user.id]",[1491,1493],"[props.customer, transactionToAdd]",[978,980],"[history, user.id]",[1798,1800],"[customers, name]",[2128,2145],"[currentCustomer, transactions]"]