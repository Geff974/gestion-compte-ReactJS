[{"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js":"1","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js":"2","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js":"3","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js":"4","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js":"5","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\store.js":"6","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Home.jsx":"7","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Login.jsx":"8","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js":"9","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js":"10","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\reducerUser.js":"11","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\actionUser.js":"12","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js":"13","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js":"14","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\type.js":"15","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\MbHome.jsx":"16","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Transactions.js":"17","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\reducerCustomer.js":"18","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\type.js":"19","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Customers.js":"20","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\actionCustomer.js":"21","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\reducerTransaction.js":"22","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\type.js":"23","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\actionTransaction.js":"24","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Auth.jsx":"25","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Menu.jsx":"26"},{"size":273,"mtime":1618862170551,"results":"27","hashOfConfig":"28"},{"size":1431,"mtime":1619173111866,"results":"29","hashOfConfig":"28"},{"size":886,"mtime":1619186313455,"results":"30","hashOfConfig":"28"},{"size":3530,"mtime":1619120506447,"results":"31","hashOfConfig":"28"},{"size":210,"mtime":1618844577144,"results":"32","hashOfConfig":"28"},{"size":436,"mtime":1618952431002,"results":"33","hashOfConfig":"28"},{"size":1345,"mtime":1618943412153,"results":"34","hashOfConfig":"28"},{"size":6088,"mtime":1619173959931,"results":"35","hashOfConfig":"28"},{"size":4483,"mtime":1619109840737,"results":"36","hashOfConfig":"28"},{"size":218,"mtime":1618844577099,"results":"37","hashOfConfig":"28"},{"size":779,"mtime":1618943364514,"results":"38","hashOfConfig":"28"},{"size":445,"mtime":1618850044092,"results":"39","hashOfConfig":"28"},{"size":584,"mtime":1618844577098,"results":"40","hashOfConfig":"28"},{"size":2419,"mtime":1618945601391,"results":"41","hashOfConfig":"28"},{"size":119,"mtime":1618850004797,"results":"42","hashOfConfig":"28"},{"size":4256,"mtime":1619186601283,"results":"43","hashOfConfig":"28"},{"size":3610,"mtime":1618953193021,"results":"44","hashOfConfig":"28"},{"size":473,"mtime":1618952177744,"results":"45","hashOfConfig":"28"},{"size":143,"mtime":1618951889142,"results":"46","hashOfConfig":"28"},{"size":2804,"mtime":1618945951964,"results":"47","hashOfConfig":"28"},{"size":278,"mtime":1618951899115,"results":"48","hashOfConfig":"28"},{"size":486,"mtime":1619012660758,"results":"49","hashOfConfig":"28"},{"size":161,"mtime":1618951907654,"results":"50","hashOfConfig":"28"},{"size":222,"mtime":1618952359845,"results":"51","hashOfConfig":"28"},{"size":7838,"mtime":1619182212139,"results":"52","hashOfConfig":"28"},{"size":1350,"mtime":1619189398732,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1t1cr17",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js",[],["118","119"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js",["120","121"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js",["122","123","124","125"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/detailCustomer.css';\r\nimport CreateTransaction from './CreateTransaction';\r\n\r\nconst DetailCustomer = () => {\r\n    \r\n    const customers = useSelector(state => state.customers.customers)\r\n    const transactions = useSelector(state => state.transactions.transactions)\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const { name } = useParams();\r\n    const [currentCustomer, setCurrentCustomer] = useState('');\r\n    const [customerTransactions, setCustomerTransactions] = useState([]);\r\n    const [colorText, setColorText] = useState('');\r\n\r\n    useEffect(() => {\r\n        const indexOfCustomer = customers.findIndex(cust => cust.name === name);\r\n        setCurrentCustomer(customers[indexOfCustomer]);\r\n        balanceSign(currentCustomer);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        transactions.map(trans => {\r\n            if(trans.name === currentCustomer.name) {\r\n                setCustomerTransactions([...customerTransactions, trans]);\r\n            }\r\n        });\r\n    }, [currentCustomer]);\r\n\r\n    const balanceSign = (customer) => {\r\n        const balance = customer.facture + customer.paiement;\r\n        console.log(balance);\r\n        if (balance < 0) {\r\n            setColorText('negative');\r\n        } else {\r\n            setColorText('positive');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {currentCustomer !== undefined &&\r\n                <div>\r\n                    <h2 className=\"customerTitle\">{(currentCustomer) ? currentCustomer.name : <p>Chargement...</p>}</h2>\r\n                    <h3 className={`balance ${colorText}`}>Balance : {currentCustomer.facture + currentCustomer.paiement},00 €</h3>\r\n                </div>\r\n            }\r\n            {currentCustomer === undefined &&\r\n                <p><span>{name}</span> n'est pas un client connu</p>\r\n            }\r\n            {customerTransactions !== undefined &&\r\n                <div className=\"container\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>designation</th>\r\n                                <th>Montant</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {customerTransactions.map((transaction, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td> {transaction.date} </td>\r\n                                        <td> {transaction.designation} </td>\r\n                                        <td> {transaction.amount},00 € </td>\r\n                                        <td><button className=\"btn btn-danger\">Effacer</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n            <CreateTransaction nameCustomer={name} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailCustomer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\store.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Home.jsx",["126","127","128"],"import React from 'react';\r\nimport QuickViewCustomer from './QuickViewCustomer';\r\nimport '../styles/Home.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userInfo } from '../Redux/User/actionUser';\r\nimport axios from 'axios';\r\n\r\nfunction Home() {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    const dispatch = useDispatch();\r\n    let customers = [];\r\n\r\n    const loadCustomers = () => {\r\n        axios.get(process.env.REACT_APP_API_URL + '/customers', { id: user.id })\r\n            .then((response) => console.log(response));\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    // const ShowCustomer = (customer) => {\r\n    //     history.push('/customers/' + customer.name);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <button onClick={loadCustomers}>Charger CLIENTS</button>\r\n            {customers !== undefined &&\r\n                <div>\r\n                    {customers.map((customer, i) => {\r\n                        // return (<QuickViewCustomer customer={customer} key={i} onClick={() => ShowCustomer(customer)} />)\r\n                        return (<QuickViewCustomer customer={customer} key={i} />)\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Login.jsx",["129","130"],"import React, { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userInfo } from '../Redux/User/actionUser';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport '../styles/Login.css';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\r\n\r\nconst Login = () => {\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [userInput, setUserInput] = useState({\r\n        usernameLogin: 'admin',\r\n        passwordLogin: 'admin'\r\n    });\r\n\r\n    const [userRegistration, setUserRegistration] = useState({\r\n        usernameRegistration: '',\r\n        emailRegistration: '',\r\n        passwordRegistration: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const handleChangeInput = e => {\r\n        setUserInput({ ...userInput, [e.target.id]: e.target.value })\r\n    }\r\n\r\n    const handleChangeRegistration = e => {\r\n        setUserRegistration({ ...userRegistration, [e.target.id]: e.target.value });\r\n    }\r\n\r\n    const loginCheck = useRef(null);\r\n    const loginForm = useRef(null);\r\n    const signupForm = useRef(null);\r\n    const titleRef = useRef(null);\r\n\r\n    const showLogin = () => {\r\n        loginCheck.current.checked = true;\r\n        loginForm.current.className = 'login';\r\n        titleRef.current.className = 'title login';\r\n    }\r\n\r\n    const showSignup = () => {\r\n        signupForm.current.checked = true;\r\n        loginForm.current.className = 'login loginHide';\r\n        titleRef.current.className = 'title login loginHide';\r\n    }\r\n\r\n    const { usernameLogin, passwordLogin } = userInput;\r\n    const { usernameRegistration, emailRegistration, passwordRegistration, confirmPassword } = userRegistration;\r\n\r\n    const disableLogin = usernameLogin === '' || passwordLogin === '' ? true : false;\r\n    const disableSignup = emailRegistration === '' || passwordRegistration === '' || confirmPassword !== passwordRegistration ? true : false;\r\n    const passwordNotEqual = passwordRegistration !== confirmPassword ? true : false;\r\n\r\n    const login = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/login', { usernameLogin: userInput.usernameLogin, passwordLogin: userInput.passwordLogin })\r\n            .then(response => {\r\n                if (response.data.message) {\r\n                    alert(response.data.message);\r\n                } else {\r\n                    dispatch(userInfo(response.data));\r\n                    console.log(response.data.id);\r\n                    getData(response.data.id);\r\n                    history.push('/');\r\n                }\r\n            })\r\n    }\r\n\r\n    const getData = (id_user) => {\r\n        axios.get(process.env.REACT_APP_API_URL + '/customers/' + id_user)\r\n            .then(res => res.data.forEach(cust => dispatch(customerAdd(cust))))\r\n            .catch(err => alert(err));\r\n\r\n        axios.get(process.env.REACT_APP_API_URL + '/transactions/' + id_user)\r\n            .then(res => res.data.forEach(trans => dispatch(transactionAdd(trans))))\r\n            .catch(err => alert(err));\r\n        // axios.get(process.env.REACT_APP_API_URL + '/transactions/' + id_user)\r\n        //     .then(res => console.log(res.data))\r\n        //     .catch(err => alert(err));\r\n    }\r\n\r\n    const register = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/register', userRegistration)\r\n            .then(response => dispatch(userInfo(response.data)))\r\n            .catch((error) => alert('Une erreur est survenue. ' + error));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal-body\">\r\n\r\n                <form action=\"#\" id=\"loginForm\" ref={loginForm}>\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='usernameLogin' onChange={handleChangeInput} value={usernameLogin} placeholder=\"Pseudo\" required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='passwordLogin' onChange={handleChangeInput} value={passwordLogin} placeholder=\"Mot de passe\" required />\r\n                    </div>\r\n                    <div className=\"pass-link\"><p>Mot de passe oublié ?</p></div>\r\n                    <div className=\"field\">\r\n                        <input type=\"submit\" onClick={login} value=\"Connexion\" disabled={disableLogin} />\r\n                    </div>\r\n                    <div className=\"signup-link\">Pas encore membre ? <p onClick={showSignup}>S'enregistrer</p></div>\r\n                </form>\r\n\r\n                <form action=\"#\" className=\"signupForm\">\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='usernameRegistration' placeholder=\"Pseudo\" onChange={handleChangeRegistration} value={usernameRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"text\" id='emailRegistration' placeholder=\"Adresse e-mail\" onChange={handleChangeRegistration} value={emailRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='passwordRegistration' placeholder=\"Mot de passe\" onChange={handleChangeRegistration} value={passwordRegistration} required />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"password\" id='confirmPassword' placeholder=\"Confirmer mot de passe\" onChange={handleChangeRegistration} value={confirmPassword} required />\r\n                        {passwordNotEqual &&\r\n                            <p>Mot de passe différent</p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <input type=\"submit\" onClick={register} value=\"S'inscrire\" disabled={disableSignup} />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js",["131"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\r\n\r\nconst CreateTransaction = ({ nameCustomer }) => {   \r\n\r\n    const customers = useSelector(state => state.customers.customers);\r\n    const user = useSelector(state => state.user.info);\r\n    const dispatch = useDispatch();\r\n    const [currentCustomer, setCurrentCustomer] = useState({name: ''});\r\n\r\n    const [transactionToAdd, setTransactionToAdd] = useState({\r\n        date: '',\r\n        customer: '',\r\n        designation: '',\r\n        amount: 0,\r\n        id_user: user.id\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (nameCustomer) {\r\n            const indexOfCustomer = customers.findIndex(cust => cust.name === nameCustomer);\r\n            setCurrentCustomer(customers[indexOfCustomer]);\r\n        }\r\n    }, [])\r\n\r\n    \r\n\r\n    const changeHandler = e => {\r\n        if (e.target.name === 'date') {\r\n            setTransactionToAdd({ ...transactionToAdd, date: e.target.value.toLocaleString() });\r\n        } else {\r\n            setTransactionToAdd({ ...transactionToAdd, [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        let transactionSend = {};\r\n        if (!nameCustomer) {\r\n            transactionSend = transactionToAdd;\r\n        } else {\r\n            transactionSend = { ...transactionToAdd, customer: currentCustomer.id }\r\n        }\r\n        axios.post(process.env.REACT_APP_API_URL + '/transactions', transactionSend)\r\n            .then(() => {\r\n                dispatch(transactionAdd(transactionSend));\r\n                setTransactionToAdd({\r\n                    date: '',\r\n                    customer: '',\r\n                    designation: '',\r\n                    amout: 0,\r\n                    id_user: user.id\r\n                });\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const { date, customer, designation, amount } = transactionToAdd;\r\n    return (\r\n        <div className=\"row\">\r\n            <form onSubmit={submitHandler} className=\"my-5\">\r\n                <div className=\"input-group align-items-end col-sm-12\">\r\n                    <div className=\"col-6 pe-1\">\r\n                        <label htmlFor=\"date\" className=\"form-label mx-3\">Date : </label>\r\n                        <input type=\"date\" name='date' className=\"form-control\" value={date} onChange={changeHandler} min=\"2019-01-01\" max=\"2021-12-31\" />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 ps-1\">\r\n                        <label htmlFor=\"customer\" className=\"form-label mx-3\">Client : </label>\r\n                        { nameCustomer !== undefined &&\r\n                            <input type=\"text\" className=\"form-control\" name=\"customer\" value={currentCustomer.name} disabled/>\r\n                        }\r\n\r\n                        { nameCustomer === undefined &&\r\n                            <select className=\"form-select\" name=\"customer\" value={customer} onChange={changeHandler}>\r\n                                <option value=''></option>\r\n                                {customers.map((customer, k) => {\r\n                                    return (\r\n                                        <option key={k} value={customer.id}>{customer.name}</option>\r\n                                    )\r\n                                })}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-6 mt-3 pe-1\">\r\n                        <label htmlFor=\"designation\" className=\"form-label mx-3\">Designation : </label>\r\n                        <input type=\"text\" name='designation' className=\"form-control\" value={designation} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 ps-1\">\r\n                        <label htmlFor=\"amount\" className=\"form-label mx-3\">Montant : </label>\r\n                        <input type=\"number\" name='amount' className=\"form-control\" value={amount} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"mx-auto mt-3\">\r\n                        <button type='submit' className=\"btn btn-success px-5\">Ajouter</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTransaction;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\reducerUser.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\actionUser.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js",["132"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst CreateCustomer = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [customer, setCustomer] = useState({\r\n        nameCustomer: '',\r\n        email: '',\r\n        id_user: user.id\r\n    })\r\n\r\n    const changeHandler = e => {\r\n        console.log(e);\r\n        console.log(customer);\r\n        setCustomer({...customer, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/customers', customer)\r\n            .then(() => {\r\n                dispatch(customerAdd(user.id));\r\n                setCustomer({ nameCustomer: '', email: '', id_user: user.id});\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const testRqt = () => {\r\n        console.log(customer);\r\n    }\r\n\r\n    const { nameCustomer, email } = customer;\r\n    return (\r\n        <div className=\"row\">\r\n            <form onSubmit={submitHandler} className=\"mt-4\">\r\n                <div className=\"input-group align-items-end\">\r\n                    <div className=\"col-6 pe1\">\r\n                        <label htmlFor=\"nameCustomer\" className=\"form-label ms-5 me-2\">Nom : </label>\r\n                        <input type=\"text\" name='nameCustomer' className=\"form-control\" value={nameCustomer} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 pe1\">\r\n                        <label htmlFor=\"email\" className=\"form-label ms-5 me-2\">e-mail : </label>\r\n                        <input type=\"email\" name='email' className=\"form-control\" value={email} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <button type='submit' className=\"btn btn-success mx-auto mt-3\">Ajouter</button>\r\n                    <button type='button' onClick={testRqt} className=\"btn btn-info mx-auto mt-3\">Info</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCustomer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\MbHome.jsx",["133","134"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Transactions.js",["135"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { MdDeleteForever, MdModeEdit } from 'react-icons/md';\r\nimport CreateTransaction from '../components/CreateTransaction';\r\nimport Title from '../components/Title';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Transactions = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const transactions = useSelector(state => state.transactions.transactions)\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    // useEffect(() => {\r\n    //     fetch(process.env.REACT_APP_API_URL + '/transactions')\r\n    //         .then(res => res.json())\r\n    //         .then(res => setTransactions(res))\r\n    // }, [update])\r\n\r\n    // const deleteTransaction = (transaction) => {\r\n    //     const requestOption = {\r\n    //         method: 'DELETE',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         body: JSON.stringify({ id: transaction.id })\r\n    //     };\r\n    //     fetch(process.env.REACT_APP_API_URL + '/transactions', requestOption)\r\n    //     .then(() => {\r\n    //         setUpdate(update + 1);\r\n    //         updateCustomers();\r\n    //     })\r\n    // }\r\n\r\n    // const updateState = () => {\r\n    //     setUpdate(update + 1);\r\n    //     updateCustomers();\r\n    // }\r\n\r\n    const deleteTransaction = (transaction) => {\r\n        console.log(transaction);\r\n    }\r\n\r\n    const dateSlice = (str) => {\r\n        const strSplit = str.split('-');\r\n        const strFinal = strSplit[2] + '/' + strSplit[1];\r\n        return strFinal;\r\n    }\r\n\r\n    const switchEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Title title='Transactions' />\r\n            <CreateTransaction />\r\n            <div className=\"text-right\">\r\n                <button className=\"btn btn-secondary\" onClick={switchEdit}> <MdModeEdit /> </button>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-striped align-middle\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Client</th>\r\n                            <th>designation</th>\r\n                            <th>Montant</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {transactions !== undefined &&\r\n                        <tbody>\r\n                            {transactions.map((transaction, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td> {dateSlice(transaction.date)} </td>\r\n                                        <td> {transaction.name} </td>\r\n                                        <td> {transaction.designation} </td>\r\n                                        <td> {transaction.amount} € </td>\r\n                                        {edit &&\r\n                                            <td><button onClick={() => deleteTransaction(transaction)} className=\"btn btn-danger\"><MdDeleteForever /></button></td>\r\n                                        }\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    }\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transactions\r\n","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\reducerCustomer.js",["136","137"],"import { CUSTOMER_UPDATE, CUSTOMER_ERASE, CUSTOMER_ADD } from './type';\r\n\r\nconst initialState = {\r\n    customers: []\r\n}\r\n\r\nconst customerReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CUSTOMER_ADD:\r\n                return {\r\n                    ...state,\r\n                    customers: [...state.customers, action.customer]\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default customerReducer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Customers.js",["138"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport CreateCustomer from '../components/CreateCustomer';\r\nimport Title from '../components/Title';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/Customers.css';\r\nimport axios from 'axios';\r\n\r\nconst Customers = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const customers = useSelector(state => state.customers.customers)\r\n\r\n    const EraseCustomer = (customer) => {\r\n        axios.post(process.env.REACT_APP_API_URL + '/customers', customer)\r\n        .then((response) => console.log(response.data))\r\n        .catch((err) => alert('Une erreur est survenue : ' + err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Title title='Clients' />\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nom</th>\r\n                            <th>Facture</th>\r\n                            <th>Paiement</th>\r\n                            <th>Balance</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {customers !== '' &&\r\n                        <tbody>\r\n                            {customers.map((customer, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.name} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.facture} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.paiement} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.facture + customer.paiement},00 € </Link></td>\r\n                                        <td><button onClick={() => EraseCustomer(customer)} className=\"btn btn-danger\">Effacer</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    }\r\n                </table>\r\n            </div>\r\n            <h3 className=\"container ms-5 mt-5\">Ajouter un client</h3>\r\n            <div>\r\n                <CreateCustomer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customers;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\actionCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\reducerTransaction.js",["139","140"],"import { TRANSACTION_ADD, TRANSACTION_ERASE, TRANSACTION_UPDATE } from './type';\r\n\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\nconst transactionReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case TRANSACTION_ADD:\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.transaction]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default transactionReducer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\actionTransaction.js",["141","142"],"import { TRANSACTION_ADD, TRANSACTION_ERASE, TRANSACTION_UPDATE } from './type';\r\n\r\nexport const transactionAdd = (transaction) => {\r\n    return {\r\n        type: TRANSACTION_ADD,\r\n        transaction: transaction\r\n    }\r\n}","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Auth.jsx",["143","144","145","146","147","148","149","150","151"],"import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FaEnvelope, FaExternalLinkAlt, FaLinkedinIn, FaLock, FaRegEnvelope, FaUser, FaWhatsapp } from 'react-icons/fa';\r\nimport { ReactComponent as Signinlogo } from '../styles/img/sign-in-logo.svg';\r\nimport { ReactComponent as Signuplogo } from '../styles/img/sign-up-logo.svg';\r\nimport '../styles/Auth.css';\r\nimport axios from 'axios';\r\nimport { userInfo } from '../Redux/User/actionUser';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { transactionAdd } from '../Redux/Transaction/actionTransaction';\r\n\r\nconst Auth = () => {\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [userLogin, setUserLogin] = useState({\r\n        usernameLogin: 'admin',\r\n        passwordLogin: 'admin'\r\n    });\r\n\r\n    const [userRegistration, setUserRegistration] = useState({\r\n        usernameRegistration: '',\r\n        emailRegistration: '',\r\n        passwordRegistration: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const handleChangeLogin = e => {\r\n        setUserLogin({ ...userLogin, [e.target.id]: e.target.value });\r\n    }\r\n\r\n    const handleChangeRegistration = e => {\r\n        setUserRegistration({ ...userRegistration, [e.target.id]: e.target.value });\r\n    }\r\n\r\n    const authContainer = useRef(null);\r\n\r\n    const [signUpMode, setSignUpMode] = useState('');\r\n    const [themeColor, setThemeColor] = useState('#2271FF');\r\n\r\n    const showSignup = () => {\r\n        setSignUpMode('sign-up-mode');\r\n    };\r\n\r\n    const showLogin = () => {\r\n        setSignUpMode('');\r\n    }\r\n\r\n    const login = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/login', userLogin)\r\n            .then(response => {\r\n                if (response.data.message) {\r\n                    alert(response.data.message);\r\n                } else {\r\n                    dispatch(userInfo(response.data));\r\n                    console.log(response.data);\r\n                    getData(response.data.id);\r\n                    history.push('/');\r\n                }\r\n            })\r\n    }\r\n\r\n    const register = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/register', userRegistration)\r\n            .then(response => dispatch(userInfo(response.data)))\r\n            .catch((error) => alert('Une erreur est survenue. ' + error));\r\n    }\r\n\r\n    const getData = (id_user) => {\r\n        axios.get(process.env.REACT_APP_API_URL + '/customers/' + id_user)\r\n            .then(res => res.data.forEach(cust => dispatch(customerAdd(cust))))\r\n            .catch(err => alert(err));\r\n\r\n        axios.get(process.env.REACT_APP_API_URL + '/transactions/' + id_user)\r\n            .then(res => res.data.forEach(trans => dispatch(transactionAdd(trans))))\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n\r\n    const { usernameLogin, passwordLogin } = userLogin;\r\n    const { usernameRegistration, emailRegistration, passwordRegistration, confirmPassword } = userRegistration;\r\n\r\n\r\n    return (\r\n        <div className={'auth-container ' + signUpMode} ref={authContainer}>\r\n\r\n\r\n            <div className=\"form-container\">\r\n                <div className=\"signin-signup\">\r\n\r\n                    <form action=\"#\" className=\"sign-in-form\">\r\n                        <h2 className=\"title\">Se connecter</h2>\r\n                        <div className=\"input-field\">\r\n                            <i> <FaUser /> </i>\r\n                            <input type=\"text\" onClick={login} placeholder=\"Nom d'utilisateur\" id=\"usernameLogin\" value={usernameLogin} onChange={handleChangeLogin} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i> <FaLock /> </i>\r\n                            <input type=\"password\" placeholder=\"Mot de passe\" id=\"passwordLogin\" value={passwordLogin} onChange={handleChangeLogin} />\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Login\" onClick={login} className=\"sign-btn solid\" />\r\n\r\n                        <p className=\"social-text\">Contactez-moi sur mes réseaux</p>\r\n                        <div className=\"social-media\">\r\n                            <a href=\"#\" className=\"social-icon\"> <FaRegEnvelope /> </a>\r\n                            <a href=\"#\" className=\"social-icon\"> <FaWhatsapp /> </a>\r\n                            <a href=\"#\" className=\"social-icon\"> <FaLinkedinIn /> </a>\r\n                            <a href=\"#\" className=\"social-icon\"> <FaExternalLinkAlt /> </a>\r\n                        </div>\r\n                    </form>\r\n\r\n\r\n                    <form action=\"#\" className=\"sign-up-form\">\r\n                        <h2 className=\"title\">S'inscrire</h2>\r\n                        <div className=\"input-field\">\r\n                            <i> <FaUser /> </i>\r\n                            <input type=\"text\" placeholder=\"Nom d'utilisateur\" id=\"usernameRegistration\" value={usernameRegistration} onChange={handleChangeRegistration} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i> <FaEnvelope /> </i>\r\n                            <input type=\"text\" placeholder=\"Email\" id=\"emailRegistration\" value={emailRegistration} onChange={handleChangeRegistration} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i> <FaLock /> </i>\r\n                            <input type=\"password\" placeholder=\"Mot de passe\" id=\"passwordRegistration\" value={passwordRegistration} onChange={handleChangeRegistration} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i> <FaLock /> </i>\r\n                            <input type=\"password\" placeholder=\"Confirmer mot de passe\" id=\"confirmPassword\" value={confirmPassword} onChange={handleChangeRegistration} />\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Login\" onClick={register} className=\"sign-btn solid\" />\r\n\r\n                        <p className=\"social-text\">Contactez-moi sur mes réseaux social professionnel</p>\r\n                        <div className=\"social-media\">\r\n                            <a href=\"#\" className=\"social-icon\"> <FaRegEnvelope /> </a>\r\n                            <a href=\"#\" className=\"social-icon\"> <FaWhatsapp /> </a>\r\n                            <a href=\"#\" className=\"social-icon\"> <FaLinkedinIn /> </a>\r\n                            <a href=\"#\" className=\"social-icon\"> <FaExternalLinkAlt /> </a>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"panels-container\">\r\n\r\n                <div className=\"panel left-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>Nouveau ici ?</h3>\r\n                        <p>N'hesitez pas, créer votre compte GRATUITEMENT maintenant.</p>\r\n                        <button className=\"sign-btn transparent\" onClick={showSignup}>S'inscrire</button>\r\n                    </div>\r\n                    <Signuplogo className=\"image\" fill={themeColor} />\r\n                </div>\r\n\r\n                <div className=\"panel right-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>Déja client(e) ?</h3>\r\n                        <p>Connectez-vous maintenant.</p>\r\n                        <button className=\"sign-btn transparent\" onClick={showLogin}>Se connecter</button>\r\n                    </div>\r\n                    <Signinlogo className=\"image\" fill={themeColor} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Auth;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Menu.jsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":12},{"ruleId":"156","severity":1,"message":"160","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":18,"column":8,"nodeType":"163","endLine":18,"endColumn":10,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"165","line":29,"column":8,"nodeType":"163","endLine":29,"endColumn":10,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":32,"column":32,"nodeType":"169","messageId":"170","endLine":32,"endColumn":34},{"ruleId":"161","severity":1,"message":"171","line":37,"column":8,"nodeType":"163","endLine":37,"endColumn":25,"suggestions":"172"},{"ruleId":"156","severity":1,"message":"173","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":18},{"ruleId":"156","severity":1,"message":"174","line":12,"column":11,"nodeType":"158","messageId":"159","endLine":12,"endColumn":19},{"ruleId":"156","severity":1,"message":"175","line":20,"column":9,"nodeType":"158","messageId":"159","endLine":20,"endColumn":16},{"ruleId":"156","severity":1,"message":"176","line":2,"column":23,"nodeType":"158","messageId":"159","endLine":2,"endColumn":34},{"ruleId":"156","severity":1,"message":"177","line":40,"column":11,"nodeType":"158","messageId":"159","endLine":40,"endColumn":20},{"ruleId":"161","severity":1,"message":"178","line":26,"column":8,"nodeType":"163","endLine":26,"endColumn":10,"suggestions":"179"},{"ruleId":"161","severity":1,"message":"162","line":15,"column":8,"nodeType":"163","endLine":15,"endColumn":10,"suggestions":"180"},{"ruleId":"161","severity":1,"message":"162","line":17,"column":8,"nodeType":"163","endLine":17,"endColumn":10,"suggestions":"181"},{"ruleId":"161","severity":1,"message":"182","line":25,"column":8,"nodeType":"163","endLine":25,"endColumn":22,"suggestions":"183"},{"ruleId":"161","severity":1,"message":"162","line":16,"column":8,"nodeType":"163","endLine":16,"endColumn":10,"suggestions":"184"},{"ruleId":"156","severity":1,"message":"185","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"186","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":41},{"ruleId":"161","severity":1,"message":"162","line":18,"column":8,"nodeType":"163","endLine":18,"endColumn":10,"suggestions":"187"},{"ruleId":"156","severity":1,"message":"188","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":44},{"ruleId":"156","severity":1,"message":"189","line":1,"column":46,"nodeType":"158","messageId":"159","endLine":1,"endColumn":64},{"ruleId":"156","severity":1,"message":"188","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":44},{"ruleId":"156","severity":1,"message":"189","line":1,"column":46,"nodeType":"158","messageId":"159","endLine":1,"endColumn":64},{"ruleId":"156","severity":1,"message":"190","line":41,"column":24,"nodeType":"158","messageId":"159","endLine":41,"endColumn":37},{"ruleId":"191","severity":1,"message":"192","line":109,"column":29,"nodeType":"193","endLine":109,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":110,"column":29,"nodeType":"193","endLine":110,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":111,"column":29,"nodeType":"193","endLine":111,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":112,"column":29,"nodeType":"193","endLine":112,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":139,"column":29,"nodeType":"193","endLine":139,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":140,"column":29,"nodeType":"193","endLine":140,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":141,"column":29,"nodeType":"193","endLine":141,"endColumn":65},{"ruleId":"191","severity":1,"message":"192","line":142,"column":29,"nodeType":"193","endLine":142,"endColumn":65},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'BottomMenu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has missing dependencies: 'currentCustomer', 'customers', and 'name'. Either include them or remove the dependency array.",["197"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'customerTransactions' and 'transactions'. Either include them or remove the dependency array. You can also do a functional update 'setCustomerTransactions(c => ...)' if you only need 'customerTransactions' in the 'setCustomerTransactions' call.",["198"],"'userInfo' is defined but never used.","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'useSelector' is defined but never used.","'showLogin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customers' and 'nameCustomer'. Either include them or remove the dependency array.",["199"],["200"],["201"],"React Hook useEffect has a missing dependency: 'calcTot'. Either include it or remove the dependency array.",["202"],["203"],"'CUSTOMER_UPDATE' is defined but never used.","'CUSTOMER_ERASE' is defined but never used.",["204"],"'TRANSACTION_ERASE' is defined but never used.","'TRANSACTION_UPDATE' is defined but never used.","'setThemeColor' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"205","fix":"213"},{"desc":"205","fix":"214"},{"desc":"215","fix":"216"},{"desc":"205","fix":"217"},{"desc":"205","fix":"218"},"Update the dependencies array to be: [history, user.id]",{"range":"219","text":"220"},"Update the dependencies array to be: [currentCustomer, customers, name]",{"range":"221","text":"222"},"Update the dependencies array to be: [currentCustomer, customerTransactions, transactions]",{"range":"223","text":"224"},"Update the dependencies array to be: [customers, nameCustomer]",{"range":"225","text":"226"},{"range":"227","text":"220"},{"range":"228","text":"220"},"Update the dependencies array to be: [calcTot, transactions]",{"range":"229","text":"230"},{"range":"231","text":"220"},{"range":"232","text":"220"},[674,676],"[history, user.id]",[1119,1121],"[currentCustomer, customers, name]",[1352,1369],"[currentCustomer, customerTransactions, transactions]",[925,927],"[customers, nameCustomer]",[484,486],[580,582],[834,848],"[calcTot, transactions]",[546,548],[570,572]]