[{"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js":"1","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js":"2","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js":"3","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js":"4","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js":"5","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\store.js":"6","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Home.jsx":"7","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Login.jsx":"8","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js":"9","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js":"10","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\reducerUser.js":"11","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\actionUser.js":"12","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js":"13","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js":"14","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\type.js":"15","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\MbHome.jsx":"16","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Transactions.js":"17","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\reducerCustomer.js":"18","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\type.js":"19","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Customers.js":"20","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\actionCustomer.js":"21","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\reducerTransaction.js":"22","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\type.js":"23","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\actionTransaction.js":"24"},{"size":273,"mtime":1618862170551,"results":"25","hashOfConfig":"26"},{"size":1573,"mtime":1618930703641,"results":"27","hashOfConfig":"26"},{"size":881,"mtime":1618844577093,"results":"28","hashOfConfig":"26"},{"size":4202,"mtime":1619016660332,"results":"29","hashOfConfig":"26"},{"size":210,"mtime":1618844577144,"results":"30","hashOfConfig":"26"},{"size":436,"mtime":1618952431002,"results":"31","hashOfConfig":"26"},{"size":1345,"mtime":1618943412153,"results":"32","hashOfConfig":"26"},{"size":6101,"mtime":1619012245794,"results":"33","hashOfConfig":"26"},{"size":3815,"mtime":1619033162853,"results":"34","hashOfConfig":"26"},{"size":218,"mtime":1618844577099,"results":"35","hashOfConfig":"26"},{"size":779,"mtime":1618943364514,"results":"36","hashOfConfig":"26"},{"size":445,"mtime":1618850044092,"results":"37","hashOfConfig":"26"},{"size":584,"mtime":1618844577098,"results":"38","hashOfConfig":"26"},{"size":2419,"mtime":1618945601391,"results":"39","hashOfConfig":"26"},{"size":119,"mtime":1618850004797,"results":"40","hashOfConfig":"26"},{"size":4194,"mtime":1619013684281,"results":"41","hashOfConfig":"26"},{"size":3610,"mtime":1618953193021,"results":"42","hashOfConfig":"26"},{"size":473,"mtime":1618952177744,"results":"43","hashOfConfig":"26"},{"size":143,"mtime":1618951889142,"results":"44","hashOfConfig":"26"},{"size":2804,"mtime":1618945951964,"results":"45","hashOfConfig":"26"},{"size":278,"mtime":1618951899115,"results":"46","hashOfConfig":"26"},{"size":486,"mtime":1619012660758,"results":"47","hashOfConfig":"26"},{"size":161,"mtime":1618951907654,"results":"48","hashOfConfig":"26"},{"size":222,"mtime":1618952359845,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1t1cr17",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\index.js",[],["106","107"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\App.js",["108"],"import React from 'react'\r\nimport './App.css';\r\nimport './styles/Home.css';\r\nimport Home from './components/Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport BottomMenu from './components/BottomMenu';\r\nimport NotFound from './pages/NotFound';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\nimport MbHome from './pages/MbHome';\r\nimport DetailCustomer from './components/detailCustomer';\r\nimport Customers from './pages/Customers';\r\nimport Transactions from './pages/Transactions';\r\nimport Login from './pages/Login';\r\n\r\n\r\nconst App = () => {\r\n\r\n\r\n  return (\r\n    <Provider store={store} >\r\n      <div className=\"App container-fluid\">\r\n          <Router>\r\n              <div className='bottomMenu'>\r\n                  {/* <Sidebar /> */}\r\n                  <BottomMenu />\r\n              </div>\r\n              <div className='mainContent'>\r\n                  <Switch>\r\n                      <Route path='/' exact component={MbHome} />\r\n                      <Route path='/login' component={Login} />\r\n                      <Route path='/customers/:name' component={DetailCustomer} />\r\n                      <Route path='/customers' component={Customers} />\r\n                      <Route path='/transactions' component={Transactions} />\r\n                      <Route path='/mb/home' component={MbHome} />\r\n                      <Route path='*' component={NotFound} />\r\n                  </Switch>\r\n              </div>\r\n          </Router>\r\n      </div>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\BottomMenu.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\detailCustomer.js",["109","110","111","112"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\NotFound.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\store.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Home.jsx",["113","114","115"],"import React from 'react';\r\nimport QuickViewCustomer from './QuickViewCustomer';\r\nimport '../styles/Home.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userInfo } from '../Redux/User/actionUser';\r\nimport axios from 'axios';\r\n\r\nfunction Home() {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    const dispatch = useDispatch();\r\n    let customers = [];\r\n\r\n    const loadCustomers = () => {\r\n        axios.get(process.env.REACT_APP_API_URL + '/customers', { id: user.id })\r\n            .then((response) => console.log(response));\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    // const ShowCustomer = (customer) => {\r\n    //     history.push('/customers/' + customer.name);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <button onClick={loadCustomers}>Charger CLIENTS</button>\r\n            {customers !== undefined &&\r\n                <div>\r\n                    {customers.map((customer, i) => {\r\n                        // return (<QuickViewCustomer customer={customer} key={i} onClick={() => ShowCustomer(customer)} />)\r\n                        return (<QuickViewCustomer customer={customer} key={i} />)\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Login.jsx",["116","117"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateTransaction.js",["118"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\Title.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\reducerUser.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\actionUser.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\QuickViewCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\components\\CreateCustomer.js",["119"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { customerAdd } from '../Redux/Customer/actionCustomer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst CreateCustomer = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [customer, setCustomer] = useState({\r\n        nameCustomer: '',\r\n        email: '',\r\n        id_user: user.id\r\n    })\r\n\r\n    const changeHandler = e => {\r\n        console.log(e);\r\n        console.log(customer);\r\n        setCustomer({...customer, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post(process.env.REACT_APP_API_URL + '/customers', customer)\r\n            .then(() => {\r\n                dispatch(customerAdd(user.id));\r\n                setCustomer({ nameCustomer: '', email: '', id_user: user.id});\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    const testRqt = () => {\r\n        console.log(customer);\r\n    }\r\n\r\n    const { nameCustomer, email } = customer;\r\n    return (\r\n        <div className=\"row\">\r\n            <form onSubmit={submitHandler} className=\"mt-4\">\r\n                <div className=\"input-group align-items-end\">\r\n                    <div className=\"col-6 pe1\">\r\n                        <label htmlFor=\"nameCustomer\" className=\"form-label ms-5 me-2\">Nom : </label>\r\n                        <input type=\"text\" name='nameCustomer' className=\"form-control\" value={nameCustomer} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <div className=\"col-6 pe1\">\r\n                        <label htmlFor=\"email\" className=\"form-label ms-5 me-2\">e-mail : </label>\r\n                        <input type=\"email\" name='email' className=\"form-control\" value={email} onChange={changeHandler} />\r\n                    </div>\r\n\r\n                    <button type='submit' className=\"btn btn-success mx-auto mt-3\">Ajouter</button>\r\n                    <button type='button' onClick={testRqt} className=\"btn btn-info mx-auto mt-3\">Info</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCustomer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\User\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\MbHome.jsx",["120","121"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Transactions.js",["122"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { MdDeleteForever, MdModeEdit } from 'react-icons/md';\r\nimport CreateTransaction from '../components/CreateTransaction';\r\nimport Title from '../components/Title';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Transactions = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const transactions = useSelector(state => state.transactions.transactions)\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    // useEffect(() => {\r\n    //     fetch(process.env.REACT_APP_API_URL + '/transactions')\r\n    //         .then(res => res.json())\r\n    //         .then(res => setTransactions(res))\r\n    // }, [update])\r\n\r\n    // const deleteTransaction = (transaction) => {\r\n    //     const requestOption = {\r\n    //         method: 'DELETE',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         body: JSON.stringify({ id: transaction.id })\r\n    //     };\r\n    //     fetch(process.env.REACT_APP_API_URL + '/transactions', requestOption)\r\n    //     .then(() => {\r\n    //         setUpdate(update + 1);\r\n    //         updateCustomers();\r\n    //     })\r\n    // }\r\n\r\n    // const updateState = () => {\r\n    //     setUpdate(update + 1);\r\n    //     updateCustomers();\r\n    // }\r\n\r\n    const deleteTransaction = (transaction) => {\r\n        console.log(transaction);\r\n    }\r\n\r\n    const dateSlice = (str) => {\r\n        const strSplit = str.split('-');\r\n        const strFinal = strSplit[2] + '/' + strSplit[1];\r\n        return strFinal;\r\n    }\r\n\r\n    const switchEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Title title='Transactions' />\r\n            <CreateTransaction />\r\n            <div className=\"text-right\">\r\n                <button className=\"btn btn-secondary\" onClick={switchEdit}> <MdModeEdit /> </button>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-striped align-middle\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Client</th>\r\n                            <th>designation</th>\r\n                            <th>Montant</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {transactions !== undefined &&\r\n                        <tbody>\r\n                            {transactions.map((transaction, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td> {dateSlice(transaction.date)} </td>\r\n                                        <td> {transaction.name} </td>\r\n                                        <td> {transaction.designation} </td>\r\n                                        <td> {transaction.amount} € </td>\r\n                                        {edit &&\r\n                                            <td><button onClick={() => deleteTransaction(transaction)} className=\"btn btn-danger\"><MdDeleteForever /></button></td>\r\n                                        }\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    }\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transactions\r\n","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\reducerCustomer.js",["123","124"],"import { CUSTOMER_UPDATE, CUSTOMER_ERASE, CUSTOMER_ADD } from './type';\r\n\r\nconst initialState = {\r\n    customers: []\r\n}\r\n\r\nconst customerReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case CUSTOMER_ADD:\r\n                return {\r\n                    ...state,\r\n                    customers: [...state.customers, action.customer]\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default customerReducer;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\pages\\Customers.js",["125"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport CreateCustomer from '../components/CreateCustomer';\r\nimport Title from '../components/Title';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/Customers.css';\r\nimport axios from 'axios';\r\n\r\nconst Customers = () => {\r\n\r\n    const user = useSelector(state => state.user.info);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if (user.id === null) {\r\n            history.push('/login');\r\n        }\r\n    }, [])\r\n\r\n    const customers = useSelector(state => state.customers.customers)\r\n\r\n    const EraseCustomer = (customer) => {\r\n        axios.post(process.env.REACT_APP_API_URL + '/customers', customer)\r\n        .then((response) => console.log(response.data))\r\n        .catch((err) => alert('Une erreur est survenue : ' + err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Title title='Clients' />\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nom</th>\r\n                            <th>Facture</th>\r\n                            <th>Paiement</th>\r\n                            <th>Balance</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {customers !== '' &&\r\n                        <tbody>\r\n                            {customers.map((customer, k) => {\r\n                                return (\r\n                                    <tr key={k}>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.name} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.facture} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.paiement} </Link></td>\r\n                                        <td><Link className=\"nav-link\" to={`/customers/${customer.name}`}> {customer.facture + customer.paiement},00 € </Link></td>\r\n                                        <td><button onClick={() => EraseCustomer(customer)} className=\"btn btn-danger\">Effacer</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    }\r\n                </table>\r\n            </div>\r\n            <h3 className=\"container ms-5 mt-5\">Ajouter un client</h3>\r\n            <div>\r\n                <CreateCustomer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customers;","C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Customer\\actionCustomer.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\reducerTransaction.js",["126","127"],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\type.js",[],"C:\\Users\\Geff-Fix\\programmation\\gestion-compte-ReactJS\\frontend_gestion_compte\\src\\Redux\\Transaction\\actionTransaction.js",["128","129"],"import { TRANSACTION_ADD, TRANSACTION_ERASE, TRANSACTION_UPDATE } from './type';\r\n\r\nexport const transactionAdd = (transaction) => {\r\n    return {\r\n        type: TRANSACTION_ADD,\r\n        transaction: transaction\r\n    }\r\n}",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":12},{"ruleId":"138","severity":1,"message":"139","line":18,"column":8,"nodeType":"140","endLine":18,"endColumn":10,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":27,"column":27,"nodeType":"143","endLine":27,"endColumn":74},{"ruleId":"144","severity":1,"message":"145","line":33,"column":32,"nodeType":"146","messageId":"147","endLine":33,"endColumn":34},{"ruleId":"138","severity":1,"message":"148","line":39,"column":8,"nodeType":"140","endLine":39,"endColumn":25,"suggestions":"149"},{"ruleId":"134","severity":1,"message":"150","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":18},{"ruleId":"134","severity":1,"message":"151","line":12,"column":11,"nodeType":"136","messageId":"137","endLine":12,"endColumn":19},{"ruleId":"134","severity":1,"message":"152","line":20,"column":9,"nodeType":"136","messageId":"137","endLine":20,"endColumn":16},{"ruleId":"134","severity":1,"message":"153","line":2,"column":23,"nodeType":"136","messageId":"137","endLine":2,"endColumn":34},{"ruleId":"134","severity":1,"message":"154","line":40,"column":11,"nodeType":"136","messageId":"137","endLine":40,"endColumn":20},{"ruleId":"134","severity":1,"message":"155","line":2,"column":27,"nodeType":"136","messageId":"137","endLine":2,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":15,"column":8,"nodeType":"140","endLine":15,"endColumn":10,"suggestions":"156"},{"ruleId":"138","severity":1,"message":"139","line":16,"column":8,"nodeType":"140","endLine":16,"endColumn":10,"suggestions":"157"},{"ruleId":"138","severity":1,"message":"158","line":24,"column":8,"nodeType":"140","endLine":24,"endColumn":22,"suggestions":"159"},{"ruleId":"138","severity":1,"message":"139","line":16,"column":8,"nodeType":"140","endLine":16,"endColumn":10,"suggestions":"160"},{"ruleId":"134","severity":1,"message":"161","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"162","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":41},{"ruleId":"138","severity":1,"message":"139","line":18,"column":8,"nodeType":"140","endLine":18,"endColumn":10,"suggestions":"163"},{"ruleId":"134","severity":1,"message":"164","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":44},{"ruleId":"134","severity":1,"message":"165","line":1,"column":46,"nodeType":"136","messageId":"137","endLine":1,"endColumn":64},{"ruleId":"134","severity":1,"message":"164","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":44},{"ruleId":"134","severity":1,"message":"165","line":1,"column":46,"nodeType":"136","messageId":"137","endLine":1,"endColumn":64},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["168"],"Assignments to the 'indexOfCustomer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'customerTransactions' and 'transactions'. Either include them or remove the dependency array. You can also do a functional update 'setCustomerTransactions(c => ...)' if you only need 'customerTransactions' in the 'setCustomerTransactions' call.",["169"],"'userInfo' is defined but never used.","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'useSelector' is defined but never used.","'showLogin' is assigned a value but never used.","'useEffect' is defined but never used.",["170"],["171"],"React Hook useEffect has a missing dependency: 'calcTot'. Either include it or remove the dependency array.",["172"],["173"],"'CUSTOMER_UPDATE' is defined but never used.","'CUSTOMER_ERASE' is defined but never used.",["174"],"'TRANSACTION_ERASE' is defined but never used.","'TRANSACTION_UPDATE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"175","fix":"179"},{"desc":"175","fix":"180"},{"desc":"181","fix":"182"},{"desc":"175","fix":"183"},{"desc":"175","fix":"184"},"Update the dependencies array to be: [history, user.id]",{"range":"185","text":"186"},"Update the dependencies array to be: [currentCustomer, customerTransactions, transactions]",{"range":"187","text":"188"},{"range":"189","text":"186"},{"range":"190","text":"186"},"Update the dependencies array to be: [calcTot, transactions]",{"range":"191","text":"192"},{"range":"193","text":"186"},{"range":"194","text":"186"},[674,676],"[history, user.id]",[1425,1442],"[currentCustomer, customerTransactions, transactions]",[484,486],[540,542],[794,808],"[calcTot, transactions]",[546,548],[570,572]]